{"version":3,"sources":["dist/notiflix-aio-3.2.4.min.js"],"names":["background","factory","root","Notiflix","global","Warning","notifySettings","backOverlay","backOverlayColor","wrapID","overlayID","width","distance","borderRadius","cssAnimation","cssAnimationDuration","pauseOnHover","className","zindex","cssAnimationStyle","closeButton","useIcon","useFontAwesome","fontAwesomeIconStyle","textColor","childClassName","notiflixIconColor","fontAwesomeClassName","fontAwesomeIconColor","typesReport","Info","newReportSettings","buttonFontSize","messageColor","buttonBackground","buttonColor","failure","svgColor","titleColor","warning","info","typesConfirm","Show","Ask","Prompt","newConfirmSettings","ID","position","backgroundColor","rtl","fontFamily","plainText","titleFontSize","titleMaxLength","messageFontSize","messageMaxLength","buttonsMaxLength","okButtonColor","okButtonBackground","cancelButtonColor","cancelButtonBackground","Standard","Hourglass","Circle","Arrows","Dots","Pulse","Custom","clickToClose","customSvgCode","svgSize","messageID","typesBlock","querySelectorLimit","commonConsoleError","error","commonConsoleLog","console","commonCheckHeadOrBody","commonSetInternalCSSCodes","getInternalCSSCodes","internalCSS","window","document","commonExtendOptions","prototype","deep","arguments","i","extended","commonGetPlaintext","htmlPool","innerHTML","reportSvgIconSuccess","reportSvgSuccess","color","reportSvgFailure","reportSvgWarning","reportSvgIconInfo","loadingAndBlockSvgIconStandard","standard","hourglass","loadingAndBlockSvgIconCircle","arrows","newNotifySettingsBackup","newNotifySettings","newOptions","notifyCreateCounter","message","ntflxNotifyWrap","bottom","right","style","ntflxNotifyOverlay","getElementById","createElement","appendChild","ntflxNotify","id","setAttribute","closeButtonHTML","theType","svgIcon","notifyType","Failure","typesNotify","notifyWrap","eachNotifyElement","timeoutRemove","hideNotifyElementsAndOverlay","removeOverlay","childElementCount","classList","add","removeNotifyElmentsAndWrapper","parentNode","removeChild","clearTimeout","clickToCloseTimeout","addEventListener","callbackOrOptions","timeoutHide","setTimeout","autoRemove","allNotifyElmNotTheLastOne","reportGetInternalCSSCodes","reportCreate","Array","options","reportType","title","buttonText","buttonMaxLength","substring","ntflxReportWrap","display","flexDirection","reportOverlay","reportSvgIconFailure","reportWrapper","reportButton","timeout","Confirm","messageOrQuestion","okButtonCallback","undefined","cancelButtonCallback","cancelButtonText","okButtonText","loadingAndBlockSvgIconPulse","pulse","length","loadingAndBlockSvgIconNotiflix","white","notifyCSS","ntflxConfirmWrap","confirmOverlay","cancelButtonHTML","theExpectedAnswer","theClientAnswer","body","okButton","validationInput","setSelectionRange","event","remove","dispatchEvent","preventDefault","returnValue","confirmCloseWrap","cancelButton","loadingCSS","newLoadingSettings","messageOrOptions","toString","messageHTML","loadingAndBlockSvgIconHourglass","loadingType","loadingAndBlockSvgIconDots","typesLoading","maxSvgWidthPx","svgSizeAsDigit","winWidth","svgIconHTML","ntflxLoadingWrap","animationDuration","loadingElm","loadingSettings","timeout2","newMessage","newMessageHTML","messageWrap","blockGetInternalCSSCodes","blockCreateOrRemoveCounter","selectorOrHTMLElements","allHTMLElements","call","nodeListOfHTMLElements","newBlockSettingsBackup","newBlockSettings","blockType","icon","messageElement","notiflixBlockWrap","blockClassName","zIndex","iconElement","eachElementPosition","averageMinHeight","eachElement","eachElementHeight","minHeightStyle","eachElementIdOrClass","positionStyle","positions","positionClassForNonStaticRef","eachOne","getAttribute","eachOneStyle","eachOneId","eachBlockElement","removeBlockElements","removeEachElementClassName","removeClassBlockElements","querySelectorAll","notifyGetInternalCSSCodes","userReportOptions","userReportExtendOptions","success","answer","loadingCreate","notiflix","delay","change","init","userBlockOptions","blockCreateOrRemove","Report","Loading","checkQueryLimit","voidAndUnavailableElements","queryIndex"],"mappings":"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","file":"notiflix-aio-3.2.4.min.db414489.js","sourceRoot":"../src","sourcesContent":["/*!\r\n * Notiflix (https://notiflix.github.io)\r\n * Version: 3.2.4\r\n * Author: Furkan MT (https://github.com/furcan)\r\n * Copyright 2019 - 2022 Notiflix, MIT Licence (https://opensource.org/licenses/MIT)\r\n */\r\n\r\n/* global define */\r\n(function (root, factory) {\r\n  if (typeof define === 'function' && define.amd) {\r\n    define([], function () {\r\n      return factory(root);\r\n    });\r\n  } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n    module.exports = factory(root);\r\n  } else {\r\n    root.Notiflix = factory(root);\r\n  }\r\n})(\r\n  typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : this,\r\n  function (window) {\r\n    'use strict';\r\n\r\n    // COMMON: SSR check: begin\r\n    if (typeof window === 'undefined' && typeof window.document === 'undefined') {\r\n      return false;\r\n    }\r\n    // COMMON: SSR check: end\r\n\r\n    // COMMON: Variables: begin\r\n    var notiflixNamespace = 'Notiflix';\r\n    var notiflixConsoleDocs =\r\n      '\\n\\nVisit documentation page to learn more: https://notiflix.github.io/documentation';\r\n    var defaultFontFamily =\r\n      '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif';\r\n    // COMMON: Variables: end\r\n\r\n    // NOTIFY: Default Settings: begin\r\n    var typesNotify = {\r\n      Success: 'Success',\r\n      Failure: 'Failure',\r\n      Warning: 'Warning',\r\n      Info: 'Info',\r\n    };\r\n    var newNotifySettings;\r\n    var notifySettings = {\r\n      wrapID: 'NotiflixNotifyWrap', // can not customizable\r\n      overlayID: 'NotiflixNotifyOverlay', // can not customizable\r\n      width: '280px',\r\n      position: 'right-top', // 'right-top' - 'right-bottom' - 'left-top' - 'left-bottom' - 'center-top' - 'center-bottom' - 'center-center'\r\n      distance: '10px',\r\n      opacity: 1,\r\n      borderRadius: '5px',\r\n      rtl: false,\r\n      timeout: 3000,\r\n      messageMaxLength: 110,\r\n      backOverlay: false,\r\n      backOverlayColor: 'rgba(0,0,0,0.5)',\r\n      plainText: true,\r\n      showOnlyTheLastOne: false,\r\n      clickToClose: false,\r\n      pauseOnHover: true,\r\n\r\n      ID: 'NotiflixNotify',\r\n      className: 'notiflix-notify',\r\n      zindex: 4001,\r\n      fontFamily: 'Quicksand',\r\n      fontSize: '13px',\r\n      cssAnimation: true,\r\n      cssAnimationDuration: 400,\r\n      cssAnimationStyle: 'fade', // 'fade' - 'zoom' - 'from-right' - 'from-top' - 'from-bottom' - 'from-left'\r\n      closeButton: false,\r\n      useIcon: true,\r\n      useFontAwesome: false,\r\n      fontAwesomeIconStyle: 'basic', // 'basic' - 'shadow'\r\n      fontAwesomeIconSize: '34px',\r\n\r\n      success: {\r\n        background: '#32c682',\r\n        textColor: '#fff',\r\n        childClassName: 'notiflix-notify-success',\r\n        notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n        fontAwesomeClassName: 'fas fa-check-circle',\r\n        fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n        backOverlayColor: 'rgba(50,198,130,0.2)',\r\n      },\r\n\r\n      failure: {\r\n        background: '#ff5549',\r\n        textColor: '#fff',\r\n        childClassName: 'notiflix-notify-failure',\r\n        notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n        fontAwesomeClassName: 'fas fa-times-circle',\r\n        fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n        backOverlayColor: 'rgba(255,85,73,0.2)',\r\n      },\r\n\r\n      warning: {\r\n        background: '#eebf31',\r\n        textColor: '#fff',\r\n        childClassName: 'notiflix-notify-warning',\r\n        notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n        fontAwesomeClassName: 'fas fa-exclamation-circle',\r\n        fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n        backOverlayColor: 'rgba(238,191,49,0.2)',\r\n      },\r\n\r\n      info: {\r\n        background: '#26c0d3',\r\n        textColor: '#fff',\r\n        childClassName: 'notiflix-notify-info',\r\n        notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n        fontAwesomeClassName: 'fas fa-info-circle',\r\n        fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n        backOverlayColor: 'rgba(38,192,211,0.2)',\r\n      },\r\n    };\r\n    // NOTIFY: Default Settings: end\r\n\r\n    // REPORT: Default Settings: begin\r\n    var typesReport = {\r\n      Success: 'Success',\r\n      Failure: 'Failure',\r\n      Warning: 'Warning',\r\n      Info: 'Info',\r\n    };\r\n    var newReportSettings;\r\n    var reportSettings = {\r\n      ID: 'NotiflixReportWrap', // can not customizable\r\n      className: 'notiflix-report',\r\n      width: '320px',\r\n      backgroundColor: '#f8f8f8',\r\n      borderRadius: '25px',\r\n      rtl: false,\r\n      zindex: 4002,\r\n      backOverlay: true,\r\n      backOverlayColor: 'rgba(0,0,0,0.5)',\r\n      fontFamily: 'Quicksand',\r\n      svgSize: '110px',\r\n      plainText: true,\r\n      titleFontSize: '16px',\r\n      titleMaxLength: 34,\r\n      messageFontSize: '13px',\r\n      messageMaxLength: 400,\r\n      buttonFontSize: '14px',\r\n      buttonMaxLength: 34,\r\n      cssAnimation: true,\r\n      cssAnimationDuration: 360,\r\n      cssAnimationStyle: 'fade', // 'fade' - 'zoom'\r\n\r\n      success: {\r\n        svgColor: '#32c682',\r\n        titleColor: '#1e1e1e',\r\n        messageColor: '#242424',\r\n        buttonBackground: '#32c682',\r\n        buttonColor: '#fff',\r\n        backOverlayColor: 'rgba(50,198,130,0.2)',\r\n      },\r\n\r\n      failure: {\r\n        svgColor: '#ff5549',\r\n        titleColor: '#1e1e1e',\r\n        messageColor: '#242424',\r\n        buttonBackground: '#ff5549',\r\n        buttonColor: '#fff',\r\n        backOverlayColor: 'rgba(255,85,73,0.2)',\r\n      },\r\n\r\n      warning: {\r\n        svgColor: '#eebf31',\r\n        titleColor: '#1e1e1e',\r\n        messageColor: '#242424',\r\n        buttonBackground: '#eebf31',\r\n        buttonColor: '#fff',\r\n        backOverlayColor: 'rgba(238,191,49,0.2)',\r\n      },\r\n\r\n      info: {\r\n        svgColor: '#26c0d3',\r\n        titleColor: '#1e1e1e',\r\n        messageColor: '#242424',\r\n        buttonBackground: '#26c0d3',\r\n        buttonColor: '#fff',\r\n        backOverlayColor: 'rgba(38,192,211,0.2)',\r\n      },\r\n    };\r\n    // REPORT: Default Settings: end\r\n\r\n    // CONFIRM: Default Settings: begin\r\n    var typesConfirm = {\r\n      Show: 'Show',\r\n      Ask: 'Ask',\r\n      Prompt: 'Prompt',\r\n    };\r\n    var newConfirmSettings;\r\n    var confirmSettings = {\r\n      ID: 'NotiflixConfirmWrap', // can not customizable\r\n      className: 'notiflix-confirm',\r\n      width: '300px',\r\n      zindex: 4003,\r\n      position: 'center', // 'center' - 'center-top' - 'center-bottom' - 'right-top' - 'right-center' - 'right-bottom' - 'left-top' - 'left-center' - 'left-bottom'\r\n      distance: '10px',\r\n      backgroundColor: '#f8f8f8',\r\n      borderRadius: '25px',\r\n      backOverlay: true,\r\n      backOverlayColor: 'rgba(0,0,0,0.5)',\r\n      rtl: false,\r\n      fontFamily: 'Quicksand',\r\n      cssAnimation: true,\r\n      cssAnimationDuration: 300,\r\n      cssAnimationStyle: 'fade', // 'zoom' - 'fade'\r\n      plainText: true,\r\n\r\n      titleColor: '#32c682',\r\n      titleFontSize: '16px',\r\n      titleMaxLength: 34,\r\n\r\n      messageColor: '#1e1e1e',\r\n      messageFontSize: '14px',\r\n      messageMaxLength: 110,\r\n\r\n      buttonsFontSize: '15px',\r\n      buttonsMaxLength: 34,\r\n      okButtonColor: '#f8f8f8',\r\n      okButtonBackground: '#32c682',\r\n      cancelButtonColor: '#f8f8f8',\r\n      cancelButtonBackground: '#a9a9a9',\r\n    };\r\n    // CONFIRM: Default Settings: end\r\n\r\n    // LOADING: Default Settings: begin\r\n    var typesLoading = {\r\n      Standard: 'Standard',\r\n      Hourglass: 'Hourglass',\r\n      Circle: 'Circle',\r\n      Arrows: 'Arrows',\r\n      Dots: 'Dots',\r\n      Pulse: 'Pulse',\r\n      Custom: 'Custom',\r\n      Notiflix: 'Notiflix',\r\n    };\r\n    var newLoadingSettings;\r\n    var loadingSettings = {\r\n      ID: 'NotiflixLoadingWrap', // can not customizable\r\n      className: 'notiflix-loading',\r\n      zindex: 4000,\r\n      backgroundColor: 'rgba(0,0,0,0.8)',\r\n      rtl: false,\r\n      fontFamily: 'Quicksand',\r\n      cssAnimation: true,\r\n      cssAnimationDuration: 400,\r\n      clickToClose: false,\r\n      customSvgUrl: null,\r\n      customSvgCode: null,\r\n      svgSize: '80px',\r\n      svgColor: '#32c682',\r\n      messageID: 'NotiflixLoadingMessage',\r\n      messageFontSize: '15px',\r\n      messageMaxLength: 34,\r\n      messageColor: '#dcdcdc',\r\n    };\r\n    // LOADING: Default Settings: end\r\n\r\n    // BLOCK: Default Settings: begin\r\n    var typesBlock = {\r\n      Standard: 'Standard',\r\n      Hourglass: 'Hourglass',\r\n      Circle: 'Circle',\r\n      Arrows: 'Arrows',\r\n      Dots: 'Dots',\r\n      Pulse: 'Pulse',\r\n    };\r\n    var newBlockSettings;\r\n    var blockSettings = {\r\n      ID: 'NotiflixBlockWrap', // can not customizable\r\n      querySelectorLimit: 200,\r\n      className: 'notiflix-block',\r\n      position: 'absolute',\r\n      zindex: 1000,\r\n      backgroundColor: 'rgba(255,255,255,0.9)',\r\n      rtl: false,\r\n      fontFamily: 'Quicksand',\r\n      cssAnimation: true,\r\n      cssAnimationDuration: 300,\r\n      svgSize: '45px',\r\n      svgColor: '#383838',\r\n      messageFontSize: '14px',\r\n      messageMaxLength: 34,\r\n      messageColor: '#383838',\r\n    };\r\n    // BLOCK: Default Settings: end\r\n\r\n    // COMMON: Console Error: begin\r\n    var commonConsoleError = function (message) {\r\n      return console.error(\r\n        '%c ' + notiflixNamespace + ' Error ',\r\n        'padding:2px;border-radius:20px;color:#fff;background:#ff5549',\r\n        '\\n' + message + notiflixConsoleDocs,\r\n      );\r\n    };\r\n    // COMMON: Console Error: end\r\n\r\n    // COMMON: Console Log: begin\r\n    var commonConsoleLog = function (message) {\r\n      return console.log(\r\n        '%c ' + notiflixNamespace + ' Info ',\r\n        'padding:2px;border-radius:20px;color:#fff;background:#26c0d3',\r\n        '\\n' + message + notiflixConsoleDocs,\r\n      );\r\n    };\r\n    // COMMON: Console Log: end\r\n\r\n    // COMMON: Check Head or Body: begin\r\n    var commonCheckHeadOrBody = function (element) {\r\n      if (!element) {\r\n        element = 'head';\r\n      }\r\n      if (window.document[element] === null) {\r\n        commonConsoleError(\r\n          '\\nNotiflix needs to be appended to the \"<' +\r\n            element +\r\n            '>\" element, but you called it before the \"<' +\r\n            element +\r\n            '>\" element has been created.',\r\n        );\r\n        return false;\r\n      }\r\n      return true;\r\n    };\r\n    // COMMON: Check Head or Body: end\r\n\r\n    // COMMON: Set Internal CSS Codes: begin\r\n    var commonSetInternalCSSCodes = function (getInternalCSSCodes, styleElementId) {\r\n      // check doc head\r\n      if (!commonCheckHeadOrBody('head')) {\r\n        return false;\r\n      }\r\n\r\n      // internal css\r\n      if (getInternalCSSCodes() !== null && !window.document.getElementById(styleElementId)) {\r\n        var internalCSS = window.document.createElement('style');\r\n        internalCSS.id = styleElementId;\r\n        internalCSS.innerHTML = getInternalCSSCodes();\r\n        window.document.head.appendChild(internalCSS);\r\n      }\r\n    };\r\n    // COMMON: Set Internal CSS Codes: end\r\n\r\n    // COMMON: Extend Options: begin\r\n    var commonExtendOptions = function () {\r\n      // variables\r\n      var extended = {};\r\n      var deep = false;\r\n      var i = 0;\r\n      // check if a deep merge\r\n      if (Object.prototype.toString.call(arguments[0]) === '[object Boolean]') {\r\n        deep = arguments[0];\r\n        i++;\r\n      }\r\n      // merge the object into the extended object\r\n      var merge = function (obj) {\r\n        for (var prop in obj) {\r\n          if (Object.prototype.hasOwnProperty.call(obj, prop)) {\r\n            // if property is an object, merge properties\r\n            if (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {\r\n              extended[prop] = commonExtendOptions(extended[prop], obj[prop]);\r\n            } else {\r\n              extended[prop] = obj[prop];\r\n            }\r\n          }\r\n        }\r\n      };\r\n      // loop through each object and conduct a merge\r\n      for (; i < arguments.length; i++) {\r\n        merge(arguments[i]);\r\n      }\r\n      return extended;\r\n    };\r\n    // COMMON: Extend Options: end\r\n\r\n    // COMMON: Get Plaintext: begin\r\n    var commonGetPlaintext = function (html) {\r\n      var htmlPool = window.document.createElement('div');\r\n      htmlPool.innerHTML = html;\r\n      return htmlPool.textContent || htmlPool.innerText || '';\r\n    };\r\n    // COMMON: Get Plaintext: end\r\n\r\n    // REPORT: SVG Icon Success: begin\r\n    var reportSvgIconSuccess = function (width, color) {\r\n      if (!width) {\r\n        width = '110px';\r\n      }\r\n      if (!color) {\r\n        color = '#32c682';\r\n      }\r\n      var reportSvgSuccess =\r\n        '<svg xmlns=\"http://www.w3.org/2000/svg\" id=\"NXReportSuccess\" width=\"' +\r\n        width +\r\n        '\" height=\"' +\r\n        width +\r\n        '\" fill=\"' +\r\n        color +\r\n        '\" viewBox=\"0 0 120 120\"><style>@-webkit-keyframes NXReportSuccess1-animation{0%{-webkit-transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px)}50%,to{-webkit-transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px)}60%{-webkit-transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px)}}@keyframes NXReportSuccess1-animation{0%{-webkit-transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px)}50%,to{-webkit-transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px)}60%{-webkit-transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px)}}@-webkit-keyframes NXReportSuccess4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportSuccess4-animation{0%{opacity:0}50%,to{opacity:1}}@-webkit-keyframes NXReportSuccess3-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportSuccess3-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportSuccess2-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportSuccess2-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}#NXReportSuccess *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style=\"-webkit-animation-name:NXReportSuccess2-animation;animation-name:NXReportSuccess2-animation;-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\"><path d=\"M60 115.38C29.46 115.38 4.62 90.54 4.62 60 4.62 29.46 29.46 4.62 60 4.62c30.54 0 55.38 24.84 55.38 55.38 0 30.54-24.84 55.38-55.38 55.38zM60 0C26.92 0 0 26.92 0 60s26.92 60 60 60 60-26.92 60-60S93.08 0 60 0z\" style=\"-webkit-animation-name:NXReportSuccess3-animation;animation-name:NXReportSuccess3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\" fill=\"inherit\" data-animator-group=\"true\" data-animator-type=\"2\"/></g><g style=\"-webkit-animation-name:NXReportSuccess1-animation;animation-name:NXReportSuccess1-animation;-webkit-transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px);-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\"><path d=\"M88.27 35.39L52.8 75.29 31.43 58.2c-.98-.81-2.44-.63-3.24.36-.79.99-.63 2.44.36 3.24l23.08 18.46c.43.34.93.51 1.44.51.64 0 1.27-.26 1.74-.78l36.91-41.53a2.3 2.3 0 0 0-.19-3.26c-.95-.86-2.41-.77-3.26.19z\" style=\"-webkit-animation-name:NXReportSuccess4-animation;animation-name:NXReportSuccess4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\" fill=\"inherit\" data-animator-group=\"true\" data-animator-type=\"2\"/></g></svg>';\r\n      return reportSvgSuccess;\r\n    };\r\n    // REPORT: SVG Icon Success: end\r\n\r\n    // REPORT: SVG Icon Failure: begin\r\n    var reportSvgIconFailure = function (width, color) {\r\n      if (!width) {\r\n        width = '110px';\r\n      }\r\n      if (!color) {\r\n        color = '#ff5549';\r\n      }\r\n      var reportSvgFailure =\r\n        '<svg xmlns=\"http://www.w3.org/2000/svg\" id=\"NXReportFailure\" width=\"' +\r\n        width +\r\n        '\" height=\"' +\r\n        width +\r\n        '\" fill=\"' +\r\n        color +\r\n        '\" viewBox=\"0 0 120 120\"><style>@-webkit-keyframes NXReportFailure2-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportFailure2-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportFailure1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportFailure1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportFailure3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportFailure3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportFailure4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportFailure4-animation{0%{opacity:0}50%,to{opacity:1}}#NXReportFailure *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style=\"-webkit-animation-name:NXReportFailure1-animation;animation-name:NXReportFailure1-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)\"><path d=\"M4.35 34.95c0-16.82 13.78-30.6 30.6-30.6h50.1c16.82 0 30.6 13.78 30.6 30.6v50.1c0 16.82-13.78 30.6-30.6 30.6h-50.1c-16.82 0-30.6-13.78-30.6-30.6v-50.1zM34.95 120h50.1c19.22 0 34.95-15.73 34.95-34.95v-50.1C120 15.73 104.27 0 85.05 0h-50.1C15.73 0 0 15.73 0 34.95v50.1C0 104.27 15.73 120 34.95 120z\" style=\"-webkit-animation-name:NXReportFailure2-animation;animation-name:NXReportFailure2-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\" fill=\"inherit\" data-animator-group=\"true\" data-animator-type=\"2\"/></g><g style=\"-webkit-animation-name:NXReportFailure3-animation;animation-name:NXReportFailure3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)\"><path d=\"M82.4 37.6c-.9-.9-2.37-.9-3.27 0L60 56.73 40.86 37.6a2.306 2.306 0 0 0-3.26 3.26L56.73 60 37.6 79.13c-.9.9-.9 2.37 0 3.27.45.45 1.04.68 1.63.68.59 0 1.18-.23 1.63-.68L60 63.26 79.13 82.4c.45.45 1.05.68 1.64.68.58 0 1.18-.23 1.63-.68.9-.9.9-2.37 0-3.27L63.26 60 82.4 40.86c.9-.91.9-2.36 0-3.26z\" style=\"-webkit-animation-name:NXReportFailure4-animation;animation-name:NXReportFailure4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\" fill=\"inherit\" data-animator-group=\"true\" data-animator-type=\"2\"/></g></svg>';\r\n      return reportSvgFailure;\r\n    };\r\n    // REPORT: SVG Icon Failure: end\r\n\r\n    // REPORT: SVG Icon Warning: begin\r\n    var reportSvgIconWarning = function (width, color) {\r\n      if (!width) {\r\n        width = '110px';\r\n      }\r\n      if (!color) {\r\n        color = '#eebf31';\r\n      }\r\n      var reportSvgWarning =\r\n        '<svg xmlns=\"http://www.w3.org/2000/svg\" id=\"NXReportWarning\" width=\"' +\r\n        width +\r\n        '\" height=\"' +\r\n        width +\r\n        '\" fill=\"' +\r\n        color +\r\n        '\" viewBox=\"0 0 120 120\"><style>@-webkit-keyframes NXReportWarning2-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportWarning2-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportWarning1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportWarning1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportWarning3-animation{0%{-webkit-transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px)}50%,to{-webkit-transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px)}60%{-webkit-transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px)}}@keyframes NXReportWarning3-animation{0%{-webkit-transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px)}50%,to{-webkit-transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px)}60%{-webkit-transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px)}}@-webkit-keyframes NXReportWarning4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportWarning4-animation{0%{opacity:0}50%,to{opacity:1}}#NXReportWarning *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style=\"-webkit-animation-name:NXReportWarning1-animation;animation-name:NXReportWarning1-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)\"><path d=\"M115.46 106.15l-54.04-93.8c-.61-1.06-2.23-1.06-2.84 0l-54.04 93.8c-.62 1.07.21 2.29 1.42 2.29h108.08c1.21 0 2.04-1.22 1.42-2.29zM65.17 10.2l54.04 93.8c2.28 3.96-.65 8.78-5.17 8.78H5.96c-4.52 0-7.45-4.82-5.17-8.78l54.04-93.8c2.28-3.95 8.03-4 10.34 0z\" style=\"-webkit-animation-name:NXReportWarning2-animation;animation-name:NXReportWarning2-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\" fill=\"inherit\" data-animator-group=\"true\" data-animator-type=\"2\"/></g><g style=\"-webkit-animation-name:NXReportWarning3-animation;animation-name:NXReportWarning3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px)\"><path d=\"M57.83 94.01c0 1.2.97 2.17 2.17 2.17s2.17-.97 2.17-2.17v-3.2c0-1.2-.97-2.17-2.17-2.17s-2.17.97-2.17 2.17v3.2zm0-14.15c0 1.2.97 2.17 2.17 2.17s2.17-.97 2.17-2.17V39.21c0-1.2-.97-2.17-2.17-2.17s-2.17.97-2.17 2.17v40.65z\" style=\"-webkit-animation-name:NXReportWarning4-animation;animation-name:NXReportWarning4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\" fill=\"inherit\" data-animator-group=\"true\" data-animator-type=\"2\"/></g></svg>';\r\n      return reportSvgWarning;\r\n    };\r\n    // REPORT: SVG Icon Warning: end\r\n\r\n    // REPORT: SVG Icon Info: begin\r\n    var reportSvgIconInfo = function (width, color) {\r\n      if (!width) {\r\n        width = '110px';\r\n      }\r\n      if (!color) {\r\n        color = '#26c0d3';\r\n      }\r\n      var reportSvgInfo =\r\n        '<svg xmlns=\"http://www.w3.org/2000/svg\" id=\"NXReportInfo\" width=\"' +\r\n        width +\r\n        '\" height=\"' +\r\n        width +\r\n        '\" fill=\"' +\r\n        color +\r\n        '\" viewBox=\"0 0 120 120\"><style>@-webkit-keyframes NXReportInfo4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportInfo4-animation{0%{opacity:0}50%,to{opacity:1}}@-webkit-keyframes NXReportInfo3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportInfo3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportInfo2-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportInfo2-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportInfo1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportInfo1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}#NXReportInfo *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style=\"-webkit-animation-name:NXReportInfo1-animation;animation-name:NXReportInfo1-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)\"><path d=\"M60 115.38C29.46 115.38 4.62 90.54 4.62 60 4.62 29.46 29.46 4.62 60 4.62c30.54 0 55.38 24.84 55.38 55.38 0 30.54-24.84 55.38-55.38 55.38zM60 0C26.92 0 0 26.92 0 60s26.92 60 60 60 60-26.92 60-60S93.08 0 60 0z\" style=\"-webkit-animation-name:NXReportInfo2-animation;animation-name:NXReportInfo2-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\" fill=\"inherit\" data-animator-group=\"true\" data-animator-type=\"2\"/></g><g style=\"-webkit-animation-name:NXReportInfo3-animation;animation-name:NXReportInfo3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)\"><path d=\"M57.75 43.85c0-1.24 1.01-2.25 2.25-2.25s2.25 1.01 2.25 2.25v48.18c0 1.24-1.01 2.25-2.25 2.25s-2.25-1.01-2.25-2.25V43.85zm0-15.88c0-1.24 1.01-2.25 2.25-2.25s2.25 1.01 2.25 2.25v3.32c0 1.25-1.01 2.25-2.25 2.25s-2.25-1-2.25-2.25v-3.32z\" style=\"-webkit-animation-name:NXReportInfo4-animation;animation-name:NXReportInfo4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\" fill=\"inherit\" data-animator-group=\"true\" data-animator-type=\"2\"/></g></svg>';\r\n      return reportSvgInfo;\r\n    };\r\n    // REPORT: SVG Icon Info: end\r\n\r\n    // LOADING && BLOCK: SVG Icon Standard: begin\r\n    var loadingAndBlockSvgIconStandard = function (width, color) {\r\n      if (!width) {\r\n        width = '60px';\r\n      }\r\n      if (!color) {\r\n        color = '#32c682';\r\n      }\r\n      var standard =\r\n        '<svg xmlns=\"http://www.w3.org/2000/svg\" stroke=\"' +\r\n        color +\r\n        '\" width=\"' +\r\n        width +\r\n        '\" height=\"' +\r\n        width +\r\n        '\" transform=\"scale(.8)\" viewBox=\"0 0 38 38\"><g fill=\"none\" fill-rule=\"evenodd\" stroke-width=\"2\" transform=\"translate(1 1)\"><circle cx=\"18\" cy=\"18\" r=\"18\" stroke-opacity=\".25\"/><path d=\"M36 18c0-9.94-8.06-18-18-18\"><animateTransform attributeName=\"transform\" dur=\"1s\" from=\"0 18 18\" repeatCount=\"indefinite\" to=\"360 18 18\" type=\"rotate\"/></path></g></svg>';\r\n      return standard;\r\n    };\r\n    // LOADING && BLOCK: SVG Icon Standard: end\r\n\r\n    // LOADING && BLOCK: SVG Icon Hourglass: begin\r\n    var loadingAndBlockSvgIconHourglass = function (width, color) {\r\n      if (!width) {\r\n        width = '60px';\r\n      }\r\n      if (!color) {\r\n        color = '#32c682';\r\n      }\r\n      var hourglass =\r\n        '<svg xmlns=\"http://www.w3.org/2000/svg\" id=\"NXLoadingHourglass\" fill=\"' +\r\n        color +\r\n        '\" width=\"' +\r\n        width +\r\n        '\" height=\"' +\r\n        width +\r\n        '\" viewBox=\"0 0 200 200\"><style>@-webkit-keyframes NXhourglass5-animation{0%{-webkit-transform:scale(1,1);transform:scale(1,1)}16.67%{-webkit-transform:scale(1,.8);transform:scale(1,.8)}33.33%{-webkit-transform:scale(.88,.6);transform:scale(.88,.6)}37.5%{-webkit-transform:scale(.85,.55);transform:scale(.85,.55)}41.67%{-webkit-transform:scale(.8,.5);transform:scale(.8,.5)}45.83%{-webkit-transform:scale(.75,.45);transform:scale(.75,.45)}50%{-webkit-transform:scale(.7,.4);transform:scale(.7,.4)}54.17%{-webkit-transform:scale(.6,.35);transform:scale(.6,.35)}58.33%{-webkit-transform:scale(.5,.3);transform:scale(.5,.3)}83.33%,to{-webkit-transform:scale(.2,0);transform:scale(.2,0)}}@keyframes NXhourglass5-animation{0%{-webkit-transform:scale(1,1);transform:scale(1,1)}16.67%{-webkit-transform:scale(1,.8);transform:scale(1,.8)}33.33%{-webkit-transform:scale(.88,.6);transform:scale(.88,.6)}37.5%{-webkit-transform:scale(.85,.55);transform:scale(.85,.55)}41.67%{-webkit-transform:scale(.8,.5);transform:scale(.8,.5)}45.83%{-webkit-transform:scale(.75,.45);transform:scale(.75,.45)}50%{-webkit-transform:scale(.7,.4);transform:scale(.7,.4)}54.17%{-webkit-transform:scale(.6,.35);transform:scale(.6,.35)}58.33%{-webkit-transform:scale(.5,.3);transform:scale(.5,.3)}83.33%,to{-webkit-transform:scale(.2,0);transform:scale(.2,0)}}@-webkit-keyframes NXhourglass3-animation{0%{-webkit-transform:scale(1,.02);transform:scale(1,.02)}79.17%,to{-webkit-transform:scale(1,1);transform:scale(1,1)}}@keyframes NXhourglass3-animation{0%{-webkit-transform:scale(1,.02);transform:scale(1,.02)}79.17%,to{-webkit-transform:scale(1,1);transform:scale(1,1)}}@-webkit-keyframes NXhourglass1-animation{0%,83.33%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes NXhourglass1-animation{0%,83.33%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}#NXLoadingHourglass *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g data-animator-group=\"true\" data-animator-type=\"1\" style=\"-webkit-animation-name:NXhourglass1-animation;animation-name:NXhourglass1-animation;-webkit-transform-origin:50% 50%;transform-origin:50% 50%;transform-box:fill-box\"><g id=\"NXhourglass2\" fill=\"inherit\"><g data-animator-group=\"true\" data-animator-type=\"2\" style=\"-webkit-animation-name:NXhourglass3-animation;animation-name:NXhourglass3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform-origin:50% 100%;transform-origin:50% 100%;transform-box:fill-box\" opacity=\".4\"><path id=\"NXhourglass4\" d=\"M100 100l-34.38 32.08v31.14h68.76v-31.14z\"/></g><g data-animator-group=\"true\" data-animator-type=\"2\" style=\"-webkit-animation-name:NXhourglass5-animation;animation-name:NXhourglass5-animation;-webkit-transform-origin:50% 100%;transform-origin:50% 100%;transform-box:fill-box\" opacity=\".4\"><path id=\"NXhourglass6\" d=\"M100 100L65.62 67.92V36.78h68.76v31.14z\"/></g><path d=\"M51.14 38.89h8.33v14.93c0 15.1 8.29 28.99 23.34 39.1 1.88 1.25 3.04 3.97 3.04 7.08s-1.16 5.83-3.04 7.09c-15.05 10.1-23.34 23.99-23.34 39.09v14.93h-8.33a4.859 4.859 0 1 0 0 9.72h97.72a4.859 4.859 0 1 0 0-9.72h-8.33v-14.93c0-15.1-8.29-28.99-23.34-39.09-1.88-1.26-3.04-3.98-3.04-7.09s1.16-5.83 3.04-7.08c15.05-10.11 23.34-24 23.34-39.1V38.89h8.33a4.859 4.859 0 1 0 0-9.72H51.14a4.859 4.859 0 1 0 0 9.72zm79.67 14.93c0 15.87-11.93 26.25-19.04 31.03-4.6 3.08-7.34 8.75-7.34 15.15 0 6.41 2.74 12.07 7.34 15.15 7.11 4.78 19.04 15.16 19.04 31.03v14.93H69.19v-14.93c0-15.87 11.93-26.25 19.04-31.02 4.6-3.09 7.34-8.75 7.34-15.16 0-6.4-2.74-12.07-7.34-15.15-7.11-4.78-19.04-15.16-19.04-31.03V38.89h61.62v14.93z\"/></g></g></svg>';\r\n      return hourglass;\r\n    };\r\n    // LOADING && BLOCK: SVG Icon Hourglass: end\r\n\r\n    // LOADING && BLOCK: SVG Icon Circle: begin\r\n    var loadingAndBlockSvgIconCircle = function (width, color) {\r\n      if (!width) {\r\n        width = '60px';\r\n      }\r\n      if (!color) {\r\n        color = '#32c682';\r\n      }\r\n      var circle =\r\n        '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' +\r\n        width +\r\n        '\" height=\"' +\r\n        width +\r\n        '\" viewBox=\"25 25 50 50\" style=\"-webkit-animation:rotate 2s linear infinite;animation:rotate 2s linear infinite;height:' +\r\n        width +\r\n        ';-webkit-transform-origin:center center;-ms-transform-origin:center center;transform-origin:center center;width:' +\r\n        width +\r\n        ';position:absolute;top:0;left:0;margin:auto\"><style>@-webkit-keyframes rotate{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes rotate{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-webkit-keyframes dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35}to{stroke-dasharray:89,200;stroke-dashoffset:-124}}@keyframes dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35}to{stroke-dasharray:89,200;stroke-dashoffset:-124}}</style><circle cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke=\"' +\r\n        color +\r\n        '\" stroke-width=\"2\" style=\"-webkit-animation:dash 1.5s ease-in-out infinite,color 1.5s ease-in-out infinite;animation:dash 1.5s ease-in-out infinite,color 1.5s ease-in-out infinite\" stroke-dasharray=\"150 200\" stroke-dashoffset=\"-10\" stroke-linecap=\"round\"/></svg>';\r\n      return circle;\r\n    };\r\n    // LOADING && BLOCK: SVG Icon Circle: end\r\n\r\n    // LOADING && BLOCK: SVG Icon Arrows: begin\r\n    var loadingAndBlockSvgIconArrows = function (width, color) {\r\n      if (!width) {\r\n        width = '60px';\r\n      }\r\n      if (!color) {\r\n        color = '#32c682';\r\n      }\r\n      var arrows =\r\n        '<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"' +\r\n        color +\r\n        '\" width=\"' +\r\n        width +\r\n        '\" height=\"' +\r\n        width +\r\n        '\" viewBox=\"0 0 128 128\"><g><path fill=\"inherit\" d=\"M109.25 55.5h-36l12-12a29.54 29.54 0 0 0-49.53 12H18.75A46.04 46.04 0 0 1 96.9 31.84l12.35-12.34v36zm-90.5 17h36l-12 12a29.54 29.54 0 0 0 49.53-12h16.97A46.04 46.04 0 0 1 31.1 96.16L18.74 108.5v-36z\"/><animateTransform attributeName=\"transform\" dur=\"1.5s\" from=\"0 64 64\" repeatCount=\"indefinite\" to=\"360 64 64\" type=\"rotate\"/></g></svg>';\r\n      return arrows;\r\n    };\r\n    // LOADING && BLOCK: SVG Icon Arrows: end\r\n\r\n    // LOADING && BLOCK: SVG Icon Dots: begin\r\n    var loadingAndBlockSvgIconDots = function (width, color) {\r\n      if (!width) {\r\n        width = '60px';\r\n      }\r\n      if (!color) {\r\n        color = '#32c682';\r\n      }\r\n      var dots =\r\n        '<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"' +\r\n        color +\r\n        '\" width=\"' +\r\n        width +\r\n        '\" height=\"' +\r\n        width +\r\n        '\" viewBox=\"0 0 100 100\"><g transform=\"translate(25 50)\"><circle r=\"9\" fill=\"inherit\" transform=\"scale(.239)\"><animateTransform attributeName=\"transform\" begin=\"-0.266s\" calcMode=\"spline\" dur=\"0.8s\" keySplines=\"0.3 0 0.7 1;0.3 0 0.7 1\" keyTimes=\"0;0.5;1\" repeatCount=\"indefinite\" type=\"scale\" values=\"0;1;0\"/></circle></g><g transform=\"translate(50 50)\"><circle r=\"9\" fill=\"inherit\" transform=\"scale(.00152)\"><animateTransform attributeName=\"transform\" begin=\"-0.133s\" calcMode=\"spline\" dur=\"0.8s\" keySplines=\"0.3 0 0.7 1;0.3 0 0.7 1\" keyTimes=\"0;0.5;1\" repeatCount=\"indefinite\" type=\"scale\" values=\"0;1;0\"/></circle></g><g transform=\"translate(75 50)\"><circle r=\"9\" fill=\"inherit\" transform=\"scale(.299)\"><animateTransform attributeName=\"transform\" begin=\"0s\" calcMode=\"spline\" dur=\"0.8s\" keySplines=\"0.3 0 0.7 1;0.3 0 0.7 1\" keyTimes=\"0;0.5;1\" repeatCount=\"indefinite\" type=\"scale\" values=\"0;1;0\"/></circle></g></svg>';\r\n      return dots;\r\n    };\r\n    // LOADING && BLOCK: SVG Icon Dots: end\r\n\r\n    // LOADING && BLOCK: SVG Icon Pulse: begin\r\n    var loadingAndBlockSvgIconPulse = function (width, color) {\r\n      if (!width) {\r\n        width = '60px';\r\n      }\r\n      if (!color) {\r\n        color = '#32c682';\r\n      }\r\n      var pulse =\r\n        '<svg xmlns=\"http://www.w3.org/2000/svg\" stroke=\"' +\r\n        color +\r\n        '\" width=\"' +\r\n        width +\r\n        '\" height=\"' +\r\n        width +\r\n        '\" viewBox=\"0 0 44 44\"><g fill=\"none\" fill-rule=\"evenodd\" stroke-width=\"2\"><circle cx=\"22\" cy=\"22\" r=\"1\"><animate attributeName=\"r\" begin=\"0s\" calcMode=\"spline\" dur=\"1.8s\" keySplines=\"0.165, 0.84, 0.44, 1\" keyTimes=\"0; 1\" repeatCount=\"indefinite\" values=\"1; 20\"/><animate attributeName=\"stroke-opacity\" begin=\"0s\" calcMode=\"spline\" dur=\"1.8s\" keySplines=\"0.3, 0.61, 0.355, 1\" keyTimes=\"0; 1\" repeatCount=\"indefinite\" values=\"1; 0\"/></circle><circle cx=\"22\" cy=\"22\" r=\"1\"><animate attributeName=\"r\" begin=\"-0.9s\" calcMode=\"spline\" dur=\"1.8s\" keySplines=\"0.165, 0.84, 0.44, 1\" keyTimes=\"0; 1\" repeatCount=\"indefinite\" values=\"1; 20\"/><animate attributeName=\"stroke-opacity\" begin=\"-0.9s\" calcMode=\"spline\" dur=\"1.8s\" keySplines=\"0.3, 0.61, 0.355, 1\" keyTimes=\"0; 1\" repeatCount=\"indefinite\" values=\"1; 0\"/></circle></g></svg>';\r\n      return pulse;\r\n    };\r\n    // LOADING && BLOCK: SVG Icon Pulse: end\r\n\r\n    // LOADING && BLOCK: SVG Icon Notiflix: begin\r\n    var loadingAndBlockSvgIconNotiflix = function (width, white, green) {\r\n      if (!width) {\r\n        width = '60px';\r\n      }\r\n      if (!white) {\r\n        white = '#f8f8f8';\r\n      }\r\n      if (!green) {\r\n        green = '#32c682';\r\n      }\r\n      var notiflixIcon =\r\n        '<svg xmlns=\"http://www.w3.org/2000/svg\" id=\"NXLoadingNotiflixLib\" width=\"' +\r\n        width +\r\n        '\" height=\"' +\r\n        width +\r\n        '\" viewBox=\"0 0 200 200\"><defs><style>@keyframes notiflix-n{0%{stroke-dashoffset:1000}to{stroke-dashoffset:0}}@keyframes notiflix-x{0%{stroke-dashoffset:1000}to{stroke-dashoffset:0}}@keyframes notiflix-dot{0%,to{stroke-width:0}50%{stroke-width:12}}.nx-icon-line{stroke:' +\r\n        white +\r\n        ';stroke-width:12;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:22;fill:none}</style></defs><path d=\"M47.97 135.05a6.5 6.5 0 1 1 0 13 6.5 6.5 0 0 1 0-13z\" style=\"animation-name:notiflix-dot;animation-timing-function:ease-in-out;animation-duration:1.25s;animation-iteration-count:infinite;animation-direction:normal\" fill=\"' +\r\n        green +\r\n        '\" stroke=\"' +\r\n        green +\r\n        '\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"22\" stroke-width=\"12\"/><path class=\"nx-icon-line\" d=\"M10.14 144.76V87.55c0-5.68-4.54-41.36 37.83-41.36 42.36 0 37.82 35.68 37.82 41.36v57.21\" style=\"animation-name:notiflix-n;animation-timing-function:linear;animation-duration:2.5s;animation-delay:0s;animation-iteration-count:infinite;animation-direction:normal\" stroke-dasharray=\"500\"/><path class=\"nx-icon-line\" d=\"M115.06 144.49c24.98-32.68 49.96-65.35 74.94-98.03M114.89 46.6c25.09 32.58 50.19 65.17 75.29 97.75\" style=\"animation-name:notiflix-x;animation-timing-function:linear;animation-duration:2.5s;animation-delay:.2s;animation-iteration-count:infinite;animation-direction:normal\" stroke-dasharray=\"500\"/></svg>';\r\n      return notiflixIcon;\r\n    };\r\n    // LOADING && BLOCK: SVG Icon Notiflix: end\r\n\r\n    // NOTIFY: Get Internal CSS Codes: begin\r\n    var notifyGetInternalCSSCodes = function () {\r\n      var notifyCSS = '';\r\n      return notifyCSS || null;\r\n    };\r\n    // NOTIFY: Get Internal CSS Codes: end\r\n\r\n    // NOTIFY: Create: begin\r\n    var notifyCreateCounter = 0;\r\n    var notifyCreate = function (notifyType, message, callbackOrOptions, options) {\r\n      // check doc body\r\n      if (!commonCheckHeadOrBody('body')) {\r\n        return false;\r\n      }\r\n\r\n      // if not initialized pretend like init\r\n      if (!newNotifySettings) {\r\n        Notiflix.Notify.init({});\r\n      }\r\n\r\n      // create a backup for new settings\r\n      var newNotifySettingsBackup = commonExtendOptions(true, newNotifySettings, {});\r\n\r\n      // check callbackOrOptions and options: begin\r\n      if (\r\n        (typeof callbackOrOptions === 'object' && !Array.isArray(callbackOrOptions)) ||\r\n        (typeof options === 'object' && !Array.isArray(options))\r\n      ) {\r\n        // new options\r\n        var newOptions = {};\r\n        if (typeof callbackOrOptions === 'object') {\r\n          newOptions = callbackOrOptions;\r\n        } else if (typeof options === 'object') {\r\n          newOptions = options;\r\n        }\r\n\r\n        // extend new settings with the new options\r\n        newNotifySettings = commonExtendOptions(true, newNotifySettings, newOptions);\r\n      }\r\n      // check callbackOrOptions and options: end\r\n\r\n      // notify type\r\n      var theType = newNotifySettings[notifyType.toLocaleLowerCase('en')];\r\n\r\n      // notify counter\r\n      notifyCreateCounter++;\r\n\r\n      // check the message: begin\r\n      if (typeof message !== 'string') {\r\n        message = 'Notiflix ' + notifyType;\r\n      }\r\n      // check the message: end\r\n\r\n      // if plainText is true => HTML tags not allowed: begin\r\n      if (newNotifySettings.plainText) {\r\n        message = commonGetPlaintext(message); // message plain text\r\n      }\r\n      // if plainText is true => HTML tags not allowed: end\r\n\r\n      // if plainText is false but the message length more than messageMaxLength => Possible HTML tags error: begin\r\n      if (!newNotifySettings.plainText && message.length > newNotifySettings.messageMaxLength) {\r\n        // extend settings for error massege\r\n        newNotifySettings = commonExtendOptions(true, newNotifySettings, {\r\n          closeButton: true,\r\n          messageMaxLength: 150,\r\n        });\r\n        // error message\r\n        message =\r\n          'Possible HTML Tags Error: The \"plainText\" option is \"false\" and the notification content length is more than the \"messageMaxLength\" option.';\r\n      }\r\n      // if plainText is false but the message length more than messageMaxLength => Possible HTML tags error: end\r\n\r\n      // check message max length: begin\r\n      if (message.length > newNotifySettings.messageMaxLength) {\r\n        message = message.substring(0, newNotifySettings.messageMaxLength) + '...';\r\n      }\r\n      // check message max length: end\r\n\r\n      // font awesome icon style: begin\r\n      if (newNotifySettings.fontAwesomeIconStyle === 'shadow') {\r\n        theType.fontAwesomeIconColor = theType.background;\r\n      }\r\n      // font awesome icon style: end\r\n\r\n      // if cssAnimaion is false => duration: begin\r\n      if (!newNotifySettings.cssAnimation) {\r\n        newNotifySettings.cssAnimationDuration = 0;\r\n      }\r\n      // if cssAnimaion is false => duration: end\r\n\r\n      // notify wrap: begin\r\n      var ntflxNotifyWrap =\r\n        window.document.getElementById(notifySettings.wrapID) ||\r\n        window.document.createElement('div');\r\n      ntflxNotifyWrap.id = notifySettings.wrapID;\r\n      ntflxNotifyWrap.style.width = newNotifySettings.width;\r\n      ntflxNotifyWrap.style.zIndex = newNotifySettings.zindex;\r\n      ntflxNotifyWrap.style.opacity = newNotifySettings.opacity;\r\n\r\n      // wrap position: begin\r\n      if (newNotifySettings.position === 'center-center') {\r\n        ntflxNotifyWrap.style.left = newNotifySettings.distance;\r\n        ntflxNotifyWrap.style.top = newNotifySettings.distance;\r\n        ntflxNotifyWrap.style.right = newNotifySettings.distance;\r\n        ntflxNotifyWrap.style.bottom = newNotifySettings.distance;\r\n        ntflxNotifyWrap.style.margin = 'auto';\r\n        ntflxNotifyWrap.classList.add('nx-flex-center-center');\r\n        ntflxNotifyWrap.style.maxHeight =\r\n          'calc((100vh - ' + newNotifySettings.distance + ') - ' + newNotifySettings.distance + ')';\r\n        ntflxNotifyWrap.style.display = 'flex';\r\n        ntflxNotifyWrap.style.flexWrap = 'wrap';\r\n        ntflxNotifyWrap.style.flexDirection = 'column';\r\n        ntflxNotifyWrap.style.justifyContent = 'center';\r\n        ntflxNotifyWrap.style.alignItems = 'center';\r\n        ntflxNotifyWrap.style.pointerEvents = 'none';\r\n      } else if (newNotifySettings.position === 'center-top') {\r\n        ntflxNotifyWrap.style.left = newNotifySettings.distance;\r\n        ntflxNotifyWrap.style.right = newNotifySettings.distance;\r\n        ntflxNotifyWrap.style.top = newNotifySettings.distance;\r\n        ntflxNotifyWrap.style.bottom = 'auto';\r\n        ntflxNotifyWrap.style.margin = 'auto';\r\n      } else if (newNotifySettings.position === 'center-bottom') {\r\n        ntflxNotifyWrap.style.left = newNotifySettings.distance;\r\n        ntflxNotifyWrap.style.right = newNotifySettings.distance;\r\n        ntflxNotifyWrap.style.bottom = newNotifySettings.distance;\r\n        ntflxNotifyWrap.style.top = 'auto';\r\n        ntflxNotifyWrap.style.margin = 'auto';\r\n      } else if (newNotifySettings.position === 'right-bottom') {\r\n        ntflxNotifyWrap.style.right = newNotifySettings.distance;\r\n        ntflxNotifyWrap.style.bottom = newNotifySettings.distance;\r\n        ntflxNotifyWrap.style.top = 'auto';\r\n        ntflxNotifyWrap.style.left = 'auto';\r\n      } else if (newNotifySettings.position === 'left-top') {\r\n        ntflxNotifyWrap.style.left = newNotifySettings.distance;\r\n        ntflxNotifyWrap.style.top = newNotifySettings.distance;\r\n        ntflxNotifyWrap.style.right = 'auto';\r\n        ntflxNotifyWrap.style.bottom = 'auto';\r\n      } else if (newNotifySettings.position === 'left-bottom') {\r\n        ntflxNotifyWrap.style.left = newNotifySettings.distance;\r\n        ntflxNotifyWrap.style.bottom = newNotifySettings.distance;\r\n        ntflxNotifyWrap.style.top = 'auto';\r\n        ntflxNotifyWrap.style.right = 'auto';\r\n      } else {\r\n        // 'right-top' or else\r\n        ntflxNotifyWrap.style.right = newNotifySettings.distance;\r\n        ntflxNotifyWrap.style.top = newNotifySettings.distance;\r\n        ntflxNotifyWrap.style.left = 'auto';\r\n        ntflxNotifyWrap.style.bottom = 'auto';\r\n      }\r\n      // wrap position: end\r\n\r\n      // if background overlay is true: begin\r\n      if (newNotifySettings.backOverlay) {\r\n        var ntflxNotifyOverlay =\r\n          window.document.getElementById(notifySettings.overlayID) ||\r\n          window.document.createElement('div');\r\n        ntflxNotifyOverlay.id = notifySettings.overlayID;\r\n        ntflxNotifyOverlay.style.width = '100%';\r\n        ntflxNotifyOverlay.style.height = '100%';\r\n        ntflxNotifyOverlay.style.position = 'fixed';\r\n        ntflxNotifyOverlay.style.zIndex = newNotifySettings.zindex - 1;\r\n        ntflxNotifyOverlay.style.left = 0;\r\n        ntflxNotifyOverlay.style.top = 0;\r\n        ntflxNotifyOverlay.style.right = 0;\r\n        ntflxNotifyOverlay.style.bottom = 0;\r\n        ntflxNotifyOverlay.style.background =\r\n          theType.backOverlayColor || newNotifySettings.backOverlayColor;\r\n        ntflxNotifyOverlay.className = newNotifySettings.cssAnimation ? 'nx-with-animation' : '';\r\n        ntflxNotifyOverlay.style.animationDuration = newNotifySettings.cssAnimation\r\n          ? newNotifySettings.cssAnimationDuration + 'ms'\r\n          : '';\r\n\r\n        if (!window.document.getElementById(notifySettings.overlayID)) {\r\n          window.document.body.appendChild(ntflxNotifyOverlay);\r\n        }\r\n      }\r\n      // if background overlay is true: end\r\n\r\n      if (!window.document.getElementById(notifySettings.wrapID)) {\r\n        window.document.body.appendChild(ntflxNotifyWrap);\r\n      }\r\n      // notify wrap: end\r\n\r\n      // notify content: begin\r\n      var ntflxNotify = window.document.createElement('div');\r\n      ntflxNotify.id = newNotifySettings.ID + '-' + notifyCreateCounter;\r\n      ntflxNotify.className =\r\n        newNotifySettings.className +\r\n        ' ' +\r\n        theType.childClassName +\r\n        ' ' +\r\n        (newNotifySettings.cssAnimation ? 'nx-with-animation' : '') +\r\n        ' ' +\r\n        (newNotifySettings.useIcon ? 'nx-with-icon' : '') +\r\n        ' nx-' +\r\n        newNotifySettings.cssAnimationStyle +\r\n        ' ' +\r\n        (newNotifySettings.closeButton && typeof callbackOrOptions !== 'function'\r\n          ? 'nx-with-close-button'\r\n          : '') +\r\n        ' ' +\r\n        (typeof callbackOrOptions === 'function' ? 'nx-with-callback' : '') +\r\n        ' ' +\r\n        (newNotifySettings.clickToClose ? 'nx-click-to-close' : '');\r\n      ntflxNotify.style.fontSize = newNotifySettings.fontSize;\r\n      ntflxNotify.style.color = theType.textColor;\r\n      ntflxNotify.style.background = theType.background;\r\n      ntflxNotify.style.borderRadius = newNotifySettings.borderRadius;\r\n      ntflxNotify.style.pointerEvents = 'all';\r\n\r\n      // rtl: begin\r\n      if (newNotifySettings.rtl) {\r\n        ntflxNotify.setAttribute('dir', 'rtl');\r\n        ntflxNotify.classList.add('nx-rtl-on');\r\n      }\r\n      // rtl: end\r\n\r\n      // font-family: begin\r\n      ntflxNotify.style.fontFamily = '\"' + newNotifySettings.fontFamily + '\", ' + defaultFontFamily;\r\n      // font-family: end\r\n\r\n      // use css animation: begin\r\n      if (newNotifySettings.cssAnimation) {\r\n        ntflxNotify.style.animationDuration = newNotifySettings.cssAnimationDuration + 'ms';\r\n      }\r\n      // use css animation: end\r\n\r\n      // close button element: begin\r\n      var closeButtonHTML = '';\r\n      if (newNotifySettings.closeButton && typeof callbackOrOptions !== 'function') {\r\n        closeButtonHTML =\r\n          '<span class=\"nx-close-button\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><g><path fill=\"' +\r\n          theType.notiflixIconColor +\r\n          '\" d=\"M0.38 2.19l7.8 7.81 -7.8 7.81c-0.51,0.5 -0.51,1.31 -0.01,1.81 0.25,0.25 0.57,0.38 0.91,0.38 0.34,0 0.67,-0.14 0.91,-0.38l7.81 -7.81 7.81 7.81c0.24,0.24 0.57,0.38 0.91,0.38 0.34,0 0.66,-0.14 0.9,-0.38 0.51,-0.5 0.51,-1.31 0,-1.81l-7.81 -7.81 7.81 -7.81c0.51,-0.5 0.51,-1.31 0,-1.82 -0.5,-0.5 -1.31,-0.5 -1.81,0l-7.81 7.81 -7.81 -7.81c-0.5,-0.5 -1.31,-0.5 -1.81,0 -0.51,0.51 -0.51,1.32 0,1.82z\"/></g></svg></span>';\r\n      }\r\n      // close buttpon element: end\r\n\r\n      // use icon: begin\r\n      if (newNotifySettings.useIcon) {\r\n        // use font awesome\r\n        if (newNotifySettings.useFontAwesome) {\r\n          ntflxNotify.innerHTML =\r\n            '<i style=\"color:' +\r\n            theType.fontAwesomeIconColor +\r\n            '; font-size:' +\r\n            newNotifySettings.fontAwesomeIconSize +\r\n            ';\" class=\"nx-message-icon nx-message-icon-fa ' +\r\n            theType.fontAwesomeClassName +\r\n            ' ' +\r\n            (newNotifySettings.fontAwesomeIconStyle === 'shadow'\r\n              ? 'nx-message-icon-fa-shadow'\r\n              : 'nx-message-icon-fa-basic') +\r\n            '\"></i><span class=\"nx-message nx-with-icon\">' +\r\n            message +\r\n            '</span>' +\r\n            (newNotifySettings.closeButton ? closeButtonHTML : '');\r\n        }\r\n        // use notiflix icon\r\n        else {\r\n          var svgIcon = '';\r\n          if (notifyType === typesNotify.Success) {\r\n            // success\r\n            svgIcon =\r\n              '<svg class=\"nx-message-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><g><path fill=\"' +\r\n              theType.notiflixIconColor +\r\n              '\" d=\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm-2.4 -13.29l11.52 -12.96c0.37,-0.41 1.01,-0.45 1.42,-0.08 0.42,0.37 0.46,1 0.09,1.42l-12.16 13.67c-0.19,0.22 -0.46,0.34 -0.75,0.34 -0.23,0 -0.45,-0.07 -0.63,-0.22l-7.6 -6.07c-0.43,-0.35 -0.5,-0.99 -0.16,-1.42 0.35,-0.43 0.99,-0.5 1.42,-0.16l6.85 5.48z\"/></g></svg>';\r\n          } else if (notifyType === typesNotify.Failure) {\r\n            // failure\r\n            svgIcon =\r\n              '<svg class=\"nx-message-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><g><path fill=\"' +\r\n              theType.notiflixIconColor +\r\n              '\" d=\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm1.42 -17.98l6.13 6.12c0.39,0.4 0.39,1.04 0,1.43 -0.19,0.19 -0.45,0.29 -0.71,0.29 -0.27,0 -0.53,-0.1 -0.72,-0.29l-6.12 -6.13 -6.13 6.13c-0.19,0.19 -0.44,0.29 -0.71,0.29 -0.27,0 -0.52,-0.1 -0.71,-0.29 -0.39,-0.39 -0.39,-1.03 0,-1.43l6.13 -6.12 -6.13 -6.13c-0.39,-0.39 -0.39,-1.03 0,-1.42 0.39,-0.39 1.03,-0.39 1.42,0l6.13 6.12 6.12 -6.12c0.4,-0.39 1.04,-0.39 1.43,0 0.39,0.39 0.39,1.03 0,1.42l-6.13 6.13z\"/></g></svg>';\r\n          } else if (notifyType === typesNotify.Warning) {\r\n            // warning\r\n            svgIcon =\r\n              '<svg class=\"nx-message-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><g><path fill=\"' +\r\n              theType.notiflixIconColor +\r\n              '\" d=\"M21.91 3.48l17.8 30.89c0.84,1.46 -0.23,3.25 -1.91,3.25l-35.6 0c-1.68,0 -2.75,-1.79 -1.91,-3.25l17.8 -30.89c0.85,-1.47 2.97,-1.47 3.82,0zm16.15 31.84l-17.8 -30.89c-0.11,-0.2 -0.41,-0.2 -0.52,0l-17.8 30.89c-0.12,0.2 0.05,0.4 0.26,0.4l35.6 0c0.21,0 0.38,-0.2 0.26,-0.4zm-19.01 -4.12l0 -1.05c0,-0.53 0.42,-0.95 0.95,-0.95 0.53,0 0.95,0.42 0.95,0.95l0 1.05c0,0.53 -0.42,0.95 -0.95,0.95 -0.53,0 -0.95,-0.42 -0.95,-0.95zm0 -4.66l0 -13.39c0,-0.52 0.42,-0.95 0.95,-0.95 0.53,0 0.95,0.43 0.95,0.95l0 13.39c0,0.53 -0.42,0.96 -0.95,0.96 -0.53,0 -0.95,-0.43 -0.95,-0.96z\"/></g></svg>';\r\n          } else if (notifyType === typesNotify.Info) {\r\n            // info\r\n            svgIcon =\r\n              '<svg class=\"nx-message-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><g><path fill=\"' +\r\n              theType.notiflixIconColor +\r\n              '\" d=\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm-0.99 -23.3c0,-0.54 0.44,-0.98 0.99,-0.98 0.55,0 0.99,0.44 0.99,0.98l0 15.86c0,0.55 -0.44,0.99 -0.99,0.99 -0.55,0 -0.99,-0.44 -0.99,-0.99l0 -15.86zm0 -5.22c0,-0.55 0.44,-0.99 0.99,-0.99 0.55,0 0.99,0.44 0.99,0.99l0 1.09c0,0.54 -0.44,0.99 -0.99,0.99 -0.55,0 -0.99,-0.45 -0.99,-0.99l0 -1.09z\"/></g></svg>';\r\n          }\r\n          ntflxNotify.innerHTML =\r\n            svgIcon +\r\n            '<span class=\"nx-message nx-with-icon\">' +\r\n            message +\r\n            '</span>' +\r\n            (newNotifySettings.closeButton ? closeButtonHTML : '');\r\n        }\r\n      }\r\n      // without icon\r\n      else {\r\n        ntflxNotify.innerHTML =\r\n          '<span class=\"nx-message\">' +\r\n          message +\r\n          '</span>' +\r\n          (newNotifySettings.closeButton ? closeButtonHTML : '');\r\n      }\r\n      // use icon: end\r\n      // notify content: end\r\n\r\n      // notify append or prepend: begin\r\n      if (\r\n        newNotifySettings.position === 'left-bottom' ||\r\n        newNotifySettings.position === 'right-bottom'\r\n      ) {\r\n        // the new one will be first\r\n        var notifyWrap = window.document.getElementById(notifySettings.wrapID);\r\n        notifyWrap.insertBefore(ntflxNotify, notifyWrap.firstChild);\r\n      } else {\r\n        window.document.getElementById(notifySettings.wrapID).appendChild(ntflxNotify);\r\n      }\r\n      // notify append or prepend: end\r\n\r\n      // remove by timeout or click: begin\r\n      var eachNotifyElement = window.document.getElementById(ntflxNotify.id);\r\n      if (eachNotifyElement) {\r\n        // timeout variables\r\n        var timeoutHide;\r\n        var timeoutRemove;\r\n\r\n        // hide notify elm and hide overlay: begin\r\n        var hideNotifyElementsAndOverlay = function () {\r\n          eachNotifyElement.classList.add('nx-remove');\r\n          var removeOverlay = window.document.getElementById(notifySettings.overlayID);\r\n          if (removeOverlay && ntflxNotifyWrap.childElementCount <= 0) {\r\n            removeOverlay.classList.add('nx-remove');\r\n          }\r\n          clearTimeout(timeoutHide);\r\n        };\r\n        // hide notify elm and hide overlay: end\r\n\r\n        // remove notify elm and wrapper: begin\r\n        var removeNotifyElmentsAndWrapper = function () {\r\n          if (eachNotifyElement && eachNotifyElement.parentNode !== null) {\r\n            eachNotifyElement.parentNode.removeChild(eachNotifyElement);\r\n          }\r\n          if (ntflxNotifyWrap.childElementCount <= 0 && ntflxNotifyWrap.parentNode !== null) {\r\n            // if childs count === 0 remove wrap\r\n            ntflxNotifyWrap.parentNode.removeChild(ntflxNotifyWrap);\r\n            var removeOverlay = window.document.getElementById(notifySettings.overlayID);\r\n            if (removeOverlay && removeOverlay.parentNode !== null) {\r\n              removeOverlay.parentNode.removeChild(removeOverlay);\r\n            }\r\n          }\r\n          clearTimeout(timeoutRemove);\r\n        };\r\n        // remove notify elm and wrapper: end\r\n\r\n        // if has close button and callbackOrOptions is not a function: begin\r\n        if (newNotifySettings.closeButton && typeof callbackOrOptions !== 'function') {\r\n          var closeButtonElm = window.document\r\n            .getElementById(ntflxNotify.id)\r\n            .querySelector('span.nx-close-button');\r\n          closeButtonElm.addEventListener('click', function () {\r\n            hideNotifyElementsAndOverlay();\r\n            var clickToCloseTimeout = setTimeout(function () {\r\n              removeNotifyElmentsAndWrapper();\r\n              clearTimeout(clickToCloseTimeout);\r\n            }, newNotifySettings.cssAnimationDuration);\r\n          });\r\n        }\r\n        // if has close button and callbackOrOptions is not a function: end\r\n\r\n        // if callbackOrOptions or click to close: begin\r\n        if (typeof callbackOrOptions === 'function' || newNotifySettings.clickToClose) {\r\n          eachNotifyElement.addEventListener('click', function () {\r\n            if (typeof callbackOrOptions === 'function') {\r\n              callbackOrOptions();\r\n            }\r\n            hideNotifyElementsAndOverlay();\r\n            var callbackTimeout = setTimeout(function () {\r\n              removeNotifyElmentsAndWrapper();\r\n              clearTimeout(callbackTimeout);\r\n            }, newNotifySettings.cssAnimationDuration);\r\n          });\r\n        }\r\n        // if callbackOrOptions or click to close: end\r\n\r\n        // else auto remove: begin\r\n        if (!newNotifySettings.closeButton && typeof callbackOrOptions !== 'function') {\r\n          // auto remove: begin\r\n          var autoRemove = function () {\r\n            timeoutHide = setTimeout(function () {\r\n              hideNotifyElementsAndOverlay();\r\n            }, newNotifySettings.timeout);\r\n            timeoutRemove = setTimeout(function () {\r\n              removeNotifyElmentsAndWrapper();\r\n            }, newNotifySettings.timeout + newNotifySettings.cssAnimationDuration);\r\n          };\r\n          autoRemove();\r\n          // auto remove: end\r\n\r\n          // pause auto remove: begin\r\n          if (newNotifySettings.pauseOnHover) {\r\n            eachNotifyElement.addEventListener('mouseenter', function () {\r\n              eachNotifyElement.classList.add('nx-paused');\r\n              clearTimeout(timeoutHide);\r\n              clearTimeout(timeoutRemove);\r\n            });\r\n            eachNotifyElement.addEventListener('mouseleave', function () {\r\n              eachNotifyElement.classList.remove('nx-paused');\r\n              autoRemove();\r\n            });\r\n          }\r\n          // pause auto remove: end\r\n        }\r\n        // else auto remove: end\r\n      }\r\n      // remove by timeout or click: end\r\n\r\n      // notify - show only the last one: begin\r\n      if (newNotifySettings.showOnlyTheLastOne && notifyCreateCounter > 0) {\r\n        var allNotifyElmNotTheLastOne = window.document.querySelectorAll(\r\n          '[id^=' +\r\n            newNotifySettings.ID +\r\n            '-]:not([id=' +\r\n            newNotifySettings.ID +\r\n            '-' +\r\n            notifyCreateCounter +\r\n            '])',\r\n        );\r\n        for (var i = 0; i < allNotifyElmNotTheLastOne.length; i++) {\r\n          var eachNotifyElmNotLastOne = allNotifyElmNotTheLastOne[i];\r\n          if (eachNotifyElmNotLastOne.parentNode !== null) {\r\n            eachNotifyElmNotLastOne.parentNode.removeChild(eachNotifyElmNotLastOne);\r\n          }\r\n        }\r\n      }\r\n      // notify - show only the last one: end\r\n\r\n      // extend new settings with the backup settings\r\n      newNotifySettings = commonExtendOptions(true, newNotifySettings, newNotifySettingsBackup);\r\n    };\r\n    // NOTIFY: Create: end\r\n\r\n    // REPORT: Get Internal CSS Codes: begin\r\n    var reportGetInternalCSSCodes = function () {\r\n      var reportCSS = '';\r\n      return reportCSS || null;\r\n    };\r\n    // REPORT: Get Internal CSS Codes: end\r\n\r\n    // REPORT: Create: begin\r\n    var reportCreate = function (\r\n      reportType,\r\n      title,\r\n      message,\r\n      buttonText,\r\n      callbackOrOptions,\r\n      options,\r\n    ) {\r\n      // check doc body\r\n      if (!commonCheckHeadOrBody('body')) {\r\n        return false;\r\n      }\r\n\r\n      // if not initialized pretend like init\r\n      if (!newReportSettings) {\r\n        Notiflix.Report.init({});\r\n      }\r\n\r\n      // create a backup for settings\r\n      var newReportSettingsBackup = {};\r\n\r\n      // check callbackOrOptions and options: begin\r\n      if (\r\n        (typeof callbackOrOptions === 'object' && !Array.isArray(callbackOrOptions)) ||\r\n        (typeof options === 'object' && !Array.isArray(options))\r\n      ) {\r\n        // new options\r\n        var newOptions = {};\r\n        if (typeof callbackOrOptions === 'object') {\r\n          newOptions = callbackOrOptions;\r\n        } else if (typeof options === 'object') {\r\n          newOptions = options;\r\n        }\r\n\r\n        // extend the backup settings with new settings\r\n        newReportSettingsBackup = commonExtendOptions(true, newReportSettings, {});\r\n\r\n        // extend new settings with the options\r\n        newReportSettings = commonExtendOptions(true, newReportSettings, newOptions);\r\n      }\r\n      // check callbackOrOptions and callback: end\r\n\r\n      // report type\r\n      var theType = newReportSettings[reportType.toLocaleLowerCase('en')];\r\n\r\n      // check the arguments: begin\r\n      if (typeof title !== 'string') {\r\n        title = 'Notiflix ' + reportType;\r\n      }\r\n      if (typeof message !== 'string') {\r\n        if (reportType === typesReport.Success) {\r\n          message =\r\n            '\"Do not try to become a person of success but try to become a person of value.\" <br><br>- Albert Einstein';\r\n        } else if (reportType === typesReport.Failure) {\r\n          message =\r\n            '\"Failure is simply the opportunity to begin again, this time more intelligently.\" <br><br>- Henry Ford';\r\n        } else if (reportType === typesReport.Warning) {\r\n          message =\r\n            '\"The peoples who want to live comfortably without producing and fatigue; they are doomed to lose their dignity, then liberty, and then independence and destiny.\" <br><br>- Mustafa Kemal Ataturk';\r\n        } else if (reportType === typesReport.Info) {\r\n          message =\r\n            '\"Knowledge rests not upon truth alone, but upon error also.\" <br><br>- Carl Gustav Jung';\r\n        }\r\n      }\r\n      if (typeof buttonText !== 'string') {\r\n        buttonText = 'Okay';\r\n      }\r\n      // check the arguments: end\r\n\r\n      // if plainText is true => HTML tags not allowed: begin\r\n      if (newReportSettings.plainText) {\r\n        title = commonGetPlaintext(title);\r\n        message = commonGetPlaintext(message);\r\n        buttonText = commonGetPlaintext(buttonText);\r\n      }\r\n      // if plainText is true => HTML tags not allowed: end\r\n\r\n      // if plainText is false but the contents length more than ${title | message | buttonText}MaxLength => Possible HTML tags error: begin\r\n      if (!newReportSettings.plainText) {\r\n        if (title.length > newReportSettings.titleMaxLength) {\r\n          title = 'Possible HTML Tags Error';\r\n          message =\r\n            'The \"plainText\" option is \"false\" and the title content length is more than the \"titleMaxLength\" option.';\r\n          buttonText = 'Okay';\r\n        }\r\n        if (message.length > newReportSettings.messageMaxLength) {\r\n          title = 'Possible HTML Tags Error';\r\n          message =\r\n            'The \"plainText\" option is \"false\" and the message content length is more than the \"messageMaxLength\" option.';\r\n          buttonText = 'Okay';\r\n        }\r\n        if (buttonText.length > newReportSettings.buttonMaxLength) {\r\n          title = 'Possible HTML Tags Error';\r\n          message =\r\n            'The \"plainText\" option is \"false\" and the button content length is more than the \"buttonMaxLength\" option.';\r\n          buttonText = 'Okay';\r\n        }\r\n      }\r\n      // if plainText is false but the contents length more than ${title | message | buttonText}MaxLength => Possible HTML tags error: end\r\n\r\n      // max length: begin\r\n      if (title.length > newReportSettings.titleMaxLength) {\r\n        title = title.substring(0, newReportSettings.titleMaxLength) + '...';\r\n      }\r\n      if (message.length > newReportSettings.messageMaxLength) {\r\n        message = message.substring(0, newReportSettings.messageMaxLength) + '...';\r\n      }\r\n      if (buttonText.length > newReportSettings.buttonMaxLength) {\r\n        buttonText = buttonText.substring(0, newReportSettings.buttonMaxLength) + '...';\r\n      }\r\n      // max length: end\r\n\r\n      // if cssAnimaion is false => duration: begin\r\n      if (!newReportSettings.cssAnimation) {\r\n        newReportSettings.cssAnimationDuration = 0;\r\n      }\r\n      // if cssAnimaion is false => duration: end\r\n\r\n      // report wrap: begin\r\n      var ntflxReportWrap = window.document.createElement('div');\r\n      ntflxReportWrap.id = reportSettings.ID;\r\n      ntflxReportWrap.className = newReportSettings.className;\r\n      ntflxReportWrap.style.zIndex = newReportSettings.zindex;\r\n      ntflxReportWrap.style.borderRadius = newReportSettings.borderRadius;\r\n      ntflxReportWrap.style.fontFamily =\r\n        '\"' + newReportSettings.fontFamily + '\", ' + defaultFontFamily;\r\n\r\n      // rtl: begin\r\n      if (newReportSettings.rtl) {\r\n        ntflxReportWrap.setAttribute('dir', 'rtl');\r\n        ntflxReportWrap.classList.add('nx-rtl-on');\r\n      }\r\n      // rtl: end\r\n\r\n      // position: begin\r\n      ntflxReportWrap.style.display = 'flex';\r\n      ntflxReportWrap.style.flexWrap = 'wrap';\r\n      ntflxReportWrap.style.flexDirection = 'column';\r\n      ntflxReportWrap.style.alignItems = 'center';\r\n      ntflxReportWrap.style.justifyContent = 'center';\r\n      // position: end\r\n\r\n      // overlay: begin\r\n      var reportOverlay = '';\r\n      if (newReportSettings.backOverlay) {\r\n        reportOverlay =\r\n          '<div class=\"' +\r\n          newReportSettings.className +\r\n          '-overlay' +\r\n          (newReportSettings.cssAnimation ? ' nx-with-animation' : '') +\r\n          '\" style=\"background:' +\r\n          (theType.backOverlayColor || newReportSettings.backOverlayColor) +\r\n          ';animation-duration:' +\r\n          newReportSettings.cssAnimationDuration +\r\n          'ms;\"></div>';\r\n      }\r\n      // overlay: end\r\n\r\n      // svg icon: begin\r\n      var svgIcon = '';\r\n      if (reportType === typesReport.Success) {\r\n        svgIcon = reportSvgIconSuccess(newReportSettings.svgSize, theType.svgColor);\r\n      } else if (reportType === typesReport.Failure) {\r\n        svgIcon = reportSvgIconFailure(newReportSettings.svgSize, theType.svgColor);\r\n      } else if (reportType === typesReport.Warning) {\r\n        svgIcon = reportSvgIconWarning(newReportSettings.svgSize, theType.svgColor);\r\n      } else if (reportType === typesReport.Info) {\r\n        svgIcon = reportSvgIconInfo(newReportSettings.svgSize, theType.svgColor);\r\n      }\r\n      // svg icon: end\r\n\r\n      ntflxReportWrap.innerHTML =\r\n        reportOverlay +\r\n        '<div class=\"' +\r\n        newReportSettings.className +\r\n        '-content' +\r\n        (newReportSettings.cssAnimation ? ' nx-with-animation ' : '') +\r\n        ' nx-' +\r\n        newReportSettings.cssAnimationStyle +\r\n        '\" style=\"width:' +\r\n        newReportSettings.width +\r\n        '; background:' +\r\n        newReportSettings.backgroundColor +\r\n        '; animation-duration:' +\r\n        newReportSettings.cssAnimationDuration +\r\n        'ms;\">' +\r\n        '<div style=\"width:' +\r\n        newReportSettings.svgSize +\r\n        '; height:' +\r\n        newReportSettings.svgSize +\r\n        ';\" class=\"' +\r\n        newReportSettings.className +\r\n        '-icon\">' +\r\n        svgIcon +\r\n        '</div>' +\r\n        '<h5 class=\"' +\r\n        newReportSettings.className +\r\n        '-title\" style=\"font-weight:500; font-size:' +\r\n        newReportSettings.titleFontSize +\r\n        '; color:' +\r\n        theType.titleColor +\r\n        ';\">' +\r\n        title +\r\n        '</h5>' +\r\n        '<p class=\"' +\r\n        newReportSettings.className +\r\n        '-message\" style=\"font-size:' +\r\n        newReportSettings.messageFontSize +\r\n        '; color:' +\r\n        theType.messageColor +\r\n        ';\">' +\r\n        message +\r\n        '</p>' +\r\n        '<a id=\"NXReportButton\" class=\"' +\r\n        newReportSettings.className +\r\n        '-button\" style=\"font-weight:500; font-size:' +\r\n        newReportSettings.buttonFontSize +\r\n        '; background:' +\r\n        theType.buttonBackground +\r\n        '; color:' +\r\n        theType.buttonColor +\r\n        ';\">' +\r\n        buttonText +\r\n        '</a>' +\r\n        '</div>';\r\n\r\n      // if there is no report element\r\n      if (!window.document.getElementById(ntflxReportWrap.id)) {\r\n        // append\r\n        window.document.body.appendChild(ntflxReportWrap);\r\n\r\n        // callback: begin\r\n        var reportWrapper = window.document.getElementById(ntflxReportWrap.id);\r\n        var reportButton = window.document.getElementById('NXReportButton');\r\n        reportButton.addEventListener('click', function () {\r\n          // if callback: begin\r\n          if (typeof callbackOrOptions === 'function') {\r\n            callbackOrOptions();\r\n          }\r\n          // if callback: end\r\n\r\n          // remove element: begin\r\n          reportWrapper.classList.add('nx-remove');\r\n          var timeout = setTimeout(function () {\r\n            if (reportWrapper.parentNode !== null) {\r\n              reportWrapper.parentNode.removeChild(reportWrapper);\r\n            }\r\n            clearTimeout(timeout);\r\n          }, newReportSettings.cssAnimationDuration);\r\n          // remove element: end\r\n        });\r\n        // callback: end\r\n      }\r\n      // report wrap: end\r\n\r\n      // extend new settings with the backup settings\r\n      newReportSettings = commonExtendOptions(true, newReportSettings, newReportSettingsBackup);\r\n    };\r\n    // REPORT: Create: end\r\n\r\n    // CONFIRM: Get Internal CSS Codes: begin\r\n    var confirmGetInternalCSSCodes = function () {\r\n      var confirmCSS = '';\r\n      return confirmCSS || null;\r\n    };\r\n    // CONFIRM: Get Internal CSS Codes: end\r\n\r\n    // CONFIRM: Create: begin\r\n    var confirmCreate = function (\r\n      confirmType,\r\n      title,\r\n      messageOrQuestion,\r\n      answer,\r\n      okButtonText,\r\n      cancelButtonText,\r\n      okButtonCallback,\r\n      cancelButtonCallback,\r\n      options,\r\n    ) {\r\n      // check doc body\r\n      if (!commonCheckHeadOrBody('body')) {\r\n        return false;\r\n      }\r\n\r\n      // if not initialized pretend like init\r\n      if (!newConfirmSettings) {\r\n        Notiflix.Confirm.init({});\r\n      }\r\n\r\n      // create a backup for new settings\r\n      var newConfirmSettingsBackup = commonExtendOptions(true, newConfirmSettings, {});\r\n\r\n      // check the \"options\": begin\r\n      if (typeof options === 'object' && !Array.isArray(options)) {\r\n        // extend new settings with the new options\r\n        newConfirmSettings = commonExtendOptions(true, newConfirmSettings, options);\r\n      }\r\n      // check the \"options\": end\r\n\r\n      // check the arguments: begin\r\n      if (typeof title !== 'string') {\r\n        title = 'Notiflix Confirm';\r\n      }\r\n      if (typeof messageOrQuestion !== 'string') {\r\n        messageOrQuestion = 'Do you agree with me?';\r\n      }\r\n      if (typeof okButtonText !== 'string') {\r\n        okButtonText = 'Yes';\r\n      }\r\n      if (typeof cancelButtonText !== 'string') {\r\n        cancelButtonText = 'No';\r\n      }\r\n      if (typeof okButtonCallback !== 'function') {\r\n        okButtonCallback = undefined;\r\n      }\r\n      if (typeof cancelButtonCallback !== 'function') {\r\n        cancelButtonCallback = undefined;\r\n      }\r\n      // check the arguments: end\r\n\r\n      // if plainText is true => HTML tags not allowed: begin\r\n      if (newConfirmSettings.plainText) {\r\n        title = commonGetPlaintext(title);\r\n        messageOrQuestion = commonGetPlaintext(messageOrQuestion);\r\n        okButtonText = commonGetPlaintext(okButtonText);\r\n        cancelButtonText = commonGetPlaintext(cancelButtonText);\r\n      }\r\n      // if plainText is true => HTML tags not allowed: end\r\n\r\n      // if plainText is false but the contents length more than ***MaxLength => Possible HTML tags error: begin\r\n      if (!newConfirmSettings.plainText) {\r\n        if (title.length > newConfirmSettings.titleMaxLength) {\r\n          title = 'Possible HTML Tags Error';\r\n          messageOrQuestion =\r\n            'The \"plainText\" option is \"false\" and the title content length is more than \"titleMaxLength\" option.';\r\n          okButtonText = 'Okay';\r\n          cancelButtonText = '...';\r\n        }\r\n        if (messageOrQuestion.length > newConfirmSettings.messageMaxLength) {\r\n          title = 'Possible HTML Tags Error';\r\n          messageOrQuestion =\r\n            'The \"plainText\" option is \"false\" and the message content length is more than \"messageMaxLength\" option.';\r\n          okButtonText = 'Okay';\r\n          cancelButtonText = '...';\r\n        }\r\n        if (\r\n          (okButtonText.length || cancelButtonText.length) > newConfirmSettings.buttonsMaxLength\r\n        ) {\r\n          title = 'Possible HTML Tags Error';\r\n          messageOrQuestion =\r\n            'The \"plainText\" option is \"false\" and the buttons content length is more than \"buttonsMaxLength\" option.';\r\n          okButtonText = 'Okay';\r\n          cancelButtonText = '...';\r\n        }\r\n      }\r\n      // if plainText is false but the contents length more than ***MaxLength => Possible HTML tags error: end\r\n\r\n      // max length: begin\r\n      if (title.length > newConfirmSettings.titleMaxLength) {\r\n        title = title.substring(0, newConfirmSettings.titleMaxLength) + '...';\r\n      }\r\n      if (messageOrQuestion.length > newConfirmSettings.messageMaxLength) {\r\n        messageOrQuestion =\r\n          messageOrQuestion.substring(0, newConfirmSettings.messageMaxLength) + '...';\r\n      }\r\n      if (okButtonText.length > newConfirmSettings.buttonsMaxLength) {\r\n        okButtonText = okButtonText.substring(0, newConfirmSettings.buttonsMaxLength) + '...';\r\n      }\r\n      if (cancelButtonText.length > newConfirmSettings.buttonsMaxLength) {\r\n        cancelButtonText =\r\n          cancelButtonText.substring(0, newConfirmSettings.buttonsMaxLength) + '...';\r\n      }\r\n      // max length: end\r\n\r\n      // if cssAnimaion is false => duration: begin\r\n      if (!newConfirmSettings.cssAnimation) {\r\n        newConfirmSettings.cssAnimationDuration = 0;\r\n      }\r\n      // if cssAnimaion is false => duration: end\r\n\r\n      // confirm wrap: begin\r\n      var ntflxConfirmWrap = window.document.createElement('div');\r\n      ntflxConfirmWrap.id = confirmSettings.ID;\r\n      ntflxConfirmWrap.className =\r\n        newConfirmSettings.className +\r\n        (newConfirmSettings.cssAnimation\r\n          ? ' nx-with-animation nx-' + newConfirmSettings.cssAnimationStyle\r\n          : '');\r\n      ntflxConfirmWrap.style.zIndex = newConfirmSettings.zindex;\r\n      ntflxConfirmWrap.style.padding = newConfirmSettings.distance;\r\n\r\n      // rtl: begin\r\n      if (newConfirmSettings.rtl) {\r\n        ntflxConfirmWrap.setAttribute('dir', 'rtl');\r\n        ntflxConfirmWrap.classList.add('nx-rtl-on');\r\n      }\r\n      // rtl: end\r\n\r\n      // position: begin\r\n      var confirmPosition =\r\n        typeof newConfirmSettings.position === 'string'\r\n          ? newConfirmSettings.position.trim()\r\n          : 'center';\r\n      ntflxConfirmWrap.classList.add('nx-position-' + confirmPosition);\r\n      // position: end\r\n\r\n      // font-family\r\n      ntflxConfirmWrap.style.fontFamily =\r\n        '\"' + newConfirmSettings.fontFamily + '\", ' + defaultFontFamily;\r\n\r\n      // if background overlay is true: begin\r\n      var confirmOverlay = '';\r\n      if (newConfirmSettings.backOverlay) {\r\n        confirmOverlay =\r\n          '<div class=\"' +\r\n          newConfirmSettings.className +\r\n          '-overlay' +\r\n          (newConfirmSettings.cssAnimation ? ' nx-with-animation' : '') +\r\n          '\" style=\"background:' +\r\n          newConfirmSettings.backOverlayColor +\r\n          ';animation-duration:' +\r\n          newConfirmSettings.cssAnimationDuration +\r\n          'ms;\"></div>';\r\n      }\r\n      // if background overlay is true: end\r\n\r\n      // if have a callback => add cancel button: begin\r\n      var cancelButtonHTML = '';\r\n      if (typeof okButtonCallback === 'function') {\r\n        cancelButtonHTML =\r\n          '<a id=\"NXConfirmButtonCancel\" class=\"nx-confirm-button-cancel\" style=\"color:' +\r\n          newConfirmSettings.cancelButtonColor +\r\n          ';background:' +\r\n          newConfirmSettings.cancelButtonBackground +\r\n          ';font-size:' +\r\n          newConfirmSettings.buttonsFontSize +\r\n          ';\">' +\r\n          cancelButtonText +\r\n          '</a>';\r\n      }\r\n      // if have a callback => add cancel button: end\r\n\r\n      // check the validation module: begin\r\n      var setValidationInput = '';\r\n      var theExpectedAnswer = null;\r\n      var theClientAnswer = undefined;\r\n      if (confirmType === typesConfirm.Ask || confirmType === typesConfirm.Prompt) {\r\n        theExpectedAnswer = answer || '';\r\n        var inputMaxLength =\r\n          confirmType === typesConfirm.Ask\r\n            ? Math.ceil(theExpectedAnswer.length * 1.5)\r\n            : theExpectedAnswer.length > 200\r\n            ? Math.ceil(theExpectedAnswer.length * 1.5)\r\n            : 250;\r\n        var inputDefaultValueAttr =\r\n          confirmType === typesConfirm.Prompt ? 'value=\"' + theExpectedAnswer + '\"' : '';\r\n        setValidationInput =\r\n          '<div><input id=\"NXConfirmValidationInput\" type=\"text\" ' +\r\n          inputDefaultValueAttr +\r\n          ' maxlength=\"' +\r\n          inputMaxLength +\r\n          '\" style=\"font-size:' +\r\n          newConfirmSettings.messageFontSize +\r\n          ';border-radius: ' +\r\n          newConfirmSettings.borderRadius +\r\n          ';\" autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"none\" /></div>';\r\n      }\r\n      // check the validation module: end\r\n\r\n      // confirm wrap content: begin\r\n      ntflxConfirmWrap.innerHTML =\r\n        confirmOverlay +\r\n        '<div class=\"' +\r\n        newConfirmSettings.className +\r\n        '-content\" style=\"width:' +\r\n        newConfirmSettings.width +\r\n        '; background:' +\r\n        newConfirmSettings.backgroundColor +\r\n        '; animation-duration:' +\r\n        newConfirmSettings.cssAnimationDuration +\r\n        'ms; border-radius: ' +\r\n        newConfirmSettings.borderRadius +\r\n        ';\">' +\r\n        '<div class=\"' +\r\n        newConfirmSettings.className +\r\n        '-head\">' +\r\n        '<h5 style=\"color:' +\r\n        newConfirmSettings.titleColor +\r\n        ';font-size:' +\r\n        newConfirmSettings.titleFontSize +\r\n        ';\">' +\r\n        title +\r\n        '</h5>' +\r\n        '<div style=\"color:' +\r\n        newConfirmSettings.messageColor +\r\n        ';font-size:' +\r\n        newConfirmSettings.messageFontSize +\r\n        ';\">' +\r\n        messageOrQuestion +\r\n        setValidationInput +\r\n        '</div>' +\r\n        '</div>' +\r\n        '<div class=\"' +\r\n        newConfirmSettings.className +\r\n        '-buttons\">' +\r\n        '<a id=\"NXConfirmButtonOk\" class=\"nx-confirm-button-ok' +\r\n        (typeof okButtonCallback === 'function' ? '' : ' nx-full') +\r\n        '\" style=\"color:' +\r\n        newConfirmSettings.okButtonColor +\r\n        ';background:' +\r\n        newConfirmSettings.okButtonBackground +\r\n        ';font-size:' +\r\n        newConfirmSettings.buttonsFontSize +\r\n        ';\">' +\r\n        okButtonText +\r\n        '</a>' +\r\n        cancelButtonHTML +\r\n        '</div>' +\r\n        '</div>';\r\n      // confirm wrap content: end\r\n      // confirm wrap: end\r\n\r\n      // if there is no confirm box: begin\r\n      if (!window.document.getElementById(ntflxConfirmWrap.id)) {\r\n        window.document.body.appendChild(ntflxConfirmWrap);\r\n\r\n        // buttons && input listener: begin\r\n        var confirmCloseWrap = window.document.getElementById(ntflxConfirmWrap.id);\r\n        var okButton = window.document.getElementById('NXConfirmButtonOk');\r\n\r\n        // validation input listener: begin\r\n        var validationInput = window.document.getElementById('NXConfirmValidationInput');\r\n        if (validationInput) {\r\n          validationInput.focus();\r\n          validationInput.setSelectionRange(0, (validationInput.value || '').length);\r\n          validationInput.addEventListener('keyup', function (event) {\r\n            var thisValue = event.target.value;\r\n            if (confirmType === typesConfirm.Ask && thisValue !== theExpectedAnswer) {\r\n              event.preventDefault();\r\n              validationInput.classList.add('nx-validation-failure');\r\n              validationInput.classList.remove('nx-validation-success');\r\n            } else {\r\n              if (confirmType === typesConfirm.Ask) {\r\n                validationInput.classList.remove('nx-validation-failure');\r\n                validationInput.classList.add('nx-validation-success');\r\n              }\r\n              var isEnter =\r\n                (event.key || '').toLocaleLowerCase('en') === 'enter' || event.keyCode === 13;\r\n              if (isEnter) {\r\n                okButton.dispatchEvent(new Event('click'));\r\n              }\r\n            }\r\n          });\r\n        }\r\n        // validation input listener: end\r\n\r\n        // ok button listener: begin\r\n        okButton.addEventListener('click', function (event) {\r\n          // check the answer if the type is \"Ask\": begin\r\n          if (confirmType === typesConfirm.Ask && theExpectedAnswer && validationInput) {\r\n            var inputValue = (validationInput.value || '').toString();\r\n            if (inputValue !== theExpectedAnswer) {\r\n              validationInput.focus();\r\n              validationInput.classList.add('nx-validation-failure');\r\n              event.stopPropagation();\r\n              event.preventDefault();\r\n              event.returnValue = false;\r\n              event.cancelBubble = true;\r\n              return false;\r\n            } else {\r\n              validationInput.classList.remove('nx-validation-failure');\r\n            }\r\n          }\r\n          // check the answer if the type is \"Ask\": end\r\n\r\n          // if ok callback && if ok callback is a function\r\n          if (typeof okButtonCallback === 'function') {\r\n            if (confirmType === typesConfirm.Prompt && validationInput) {\r\n              theClientAnswer = validationInput.value || '';\r\n            }\r\n            okButtonCallback(theClientAnswer);\r\n          }\r\n          confirmCloseWrap.classList.add('nx-remove');\r\n\r\n          var timeout = setTimeout(function () {\r\n            if (confirmCloseWrap.parentNode !== null) {\r\n              confirmCloseWrap.parentNode.removeChild(confirmCloseWrap);\r\n              clearTimeout(timeout);\r\n            }\r\n          }, newConfirmSettings.cssAnimationDuration);\r\n        });\r\n        // ok button listener: end\r\n\r\n        // if ok callback && if ok callback a function => add Cancel Button listener: begin\r\n        if (typeof okButtonCallback === 'function') {\r\n          // cancel button listener: begin\r\n          var cancelButton = window.document.getElementById('NXConfirmButtonCancel');\r\n          cancelButton.addEventListener('click', function () {\r\n            // if cancel callback && if cancel callback a function\r\n            if (typeof cancelButtonCallback === 'function') {\r\n              if (confirmType === typesConfirm.Prompt && validationInput) {\r\n                theClientAnswer = validationInput.value || '';\r\n              }\r\n              cancelButtonCallback(theClientAnswer);\r\n            }\r\n            confirmCloseWrap.classList.add('nx-remove');\r\n\r\n            var timeout = setTimeout(function () {\r\n              if (confirmCloseWrap.parentNode !== null) {\r\n                confirmCloseWrap.parentNode.removeChild(confirmCloseWrap);\r\n                clearTimeout(timeout);\r\n              }\r\n            }, newConfirmSettings.cssAnimationDuration);\r\n          });\r\n          // cancel button listener: end\r\n        }\r\n        // if ok callback && if ok callback a function => add Cancel Button listener: end\r\n        // buttons && input listener: end\r\n      }\r\n      // if there is no confirm box: end\r\n\r\n      // extend new settings with the backup settings\r\n      newConfirmSettings = commonExtendOptions(true, newConfirmSettings, newConfirmSettingsBackup);\r\n    };\r\n    // CONFIRM: Create: end\r\n\r\n    // LOADING: Get Internal CSS Codes: begin\r\n    var loadingGetInternalCSSCodes = function () {\r\n      var loadingCSS = '';\r\n      return loadingCSS || null;\r\n    };\r\n    // LOADING: Get Internal CSS Codes: end\r\n\r\n    // LOADING: Create: begin\r\n    var loadingCreate = function (loadingType, messageOrOptions, options, display, delay) {\r\n      // check doc body\r\n      if (!commonCheckHeadOrBody('body')) {\r\n        return false;\r\n      }\r\n\r\n      // if not initialized pretend like init\r\n      if (!newLoadingSettings) {\r\n        Notiflix.Loading.init({});\r\n      }\r\n\r\n      // create a backup for new settings\r\n      var newLoadingSettingsBackup = commonExtendOptions(true, newLoadingSettings, {});\r\n\r\n      // check \"messageOrOptions\" and \"options\": begin\r\n      if (\r\n        (typeof messageOrOptions === 'object' && !Array.isArray(messageOrOptions)) ||\r\n        (typeof options === 'object' && !Array.isArray(options))\r\n      ) {\r\n        // new options\r\n        var newOptions = {};\r\n        if (typeof messageOrOptions === 'object') {\r\n          newOptions = messageOrOptions;\r\n        } else if (typeof options === 'object') {\r\n          newOptions = options;\r\n        }\r\n\r\n        // extend new settings with the new options\r\n        newLoadingSettings = commonExtendOptions(true, newLoadingSettings, newOptions);\r\n      }\r\n      // check \"messageOrOptions\" and \"options\": end\r\n\r\n      // check the message\r\n      var message = '';\r\n      if (typeof messageOrOptions === 'string' && messageOrOptions.length > 0) {\r\n        message = messageOrOptions;\r\n      }\r\n\r\n      // show loading\r\n      if (display) {\r\n        // if message settings: begin\r\n        if (message.length > newLoadingSettings.messageMaxLength) {\r\n          message =\r\n            commonGetPlaintext(message)\r\n              .toString()\r\n              .substring(0, newLoadingSettings.messageMaxLength) + '...';\r\n        } else {\r\n          message = commonGetPlaintext(message).toString();\r\n        }\r\n        var messageHTML = '';\r\n        if (message.length > 0) {\r\n          messageHTML =\r\n            '<p id=\"' +\r\n            newLoadingSettings.messageID +\r\n            '\" class=\"nx-loading-message\" style=\"color:' +\r\n            newLoadingSettings.messageColor +\r\n            ';font-size:' +\r\n            newLoadingSettings.messageFontSize +\r\n            ';\">' +\r\n            message +\r\n            '</p>';\r\n        }\r\n        // if message settings: end\r\n\r\n        // if cssAnimaion is false => duration: begin\r\n        if (!newLoadingSettings.cssAnimation) {\r\n          newLoadingSettings.cssAnimationDuration = 0;\r\n        }\r\n        // if cssAnimaion is false => duration: end\r\n\r\n        // svgIcon: begin\r\n        var svgIcon = '';\r\n        if (loadingType === typesLoading.Standard) {\r\n          svgIcon = loadingAndBlockSvgIconStandard(\r\n            newLoadingSettings.svgSize,\r\n            newLoadingSettings.svgColor,\r\n          );\r\n        } else if (loadingType === typesLoading.Hourglass) {\r\n          svgIcon = loadingAndBlockSvgIconHourglass(\r\n            newLoadingSettings.svgSize,\r\n            newLoadingSettings.svgColor,\r\n          );\r\n        } else if (loadingType === typesLoading.Circle) {\r\n          svgIcon = loadingAndBlockSvgIconCircle(\r\n            newLoadingSettings.svgSize,\r\n            newLoadingSettings.svgColor,\r\n          );\r\n        } else if (loadingType === typesLoading.Arrows) {\r\n          svgIcon = loadingAndBlockSvgIconArrows(\r\n            newLoadingSettings.svgSize,\r\n            newLoadingSettings.svgColor,\r\n          );\r\n        } else if (loadingType === typesLoading.Dots) {\r\n          svgIcon = loadingAndBlockSvgIconDots(\r\n            newLoadingSettings.svgSize,\r\n            newLoadingSettings.svgColor,\r\n          );\r\n        } else if (loadingType === typesLoading.Pulse) {\r\n          svgIcon = loadingAndBlockSvgIconPulse(\r\n            newLoadingSettings.svgSize,\r\n            newLoadingSettings.svgColor,\r\n          );\r\n        } else if (\r\n          loadingType === typesLoading.Custom &&\r\n          newLoadingSettings.customSvgCode !== null &&\r\n          newLoadingSettings.customSvgUrl === null\r\n        ) {\r\n          svgIcon = newLoadingSettings.customSvgCode || '';\r\n        } else if (\r\n          loadingType === typesLoading.Custom &&\r\n          newLoadingSettings.customSvgUrl !== null &&\r\n          newLoadingSettings.customSvgCode === null\r\n        ) {\r\n          svgIcon =\r\n            '<img class=\"nx-custom-loading-icon\" width=\"' +\r\n            newLoadingSettings.svgSize +\r\n            '\" height=\"' +\r\n            newLoadingSettings.svgSize +\r\n            '\" src=\"' +\r\n            newLoadingSettings.customSvgUrl +\r\n            '\" alt=\"Notiflix\">';\r\n        } else if (\r\n          loadingType === typesLoading.Custom &&\r\n          (newLoadingSettings.customSvgUrl === null || newLoadingSettings.customSvgCode === null)\r\n        ) {\r\n          commonConsoleError(\r\n            'You have to set a static SVG url to \"customSvgUrl\" option to use Loading Custom.',\r\n          );\r\n          return false;\r\n        } else {\r\n          svgIcon = loadingAndBlockSvgIconNotiflix(\r\n            newLoadingSettings.svgSize,\r\n            '#f8f8f8',\r\n            '#32c682',\r\n          );\r\n        }\r\n        var svgSizeAsDigit = parseInt((newLoadingSettings.svgSize || '').replace(/[^0-9]/g, ''));\r\n        var winWidth = window.innerWidth;\r\n        var maxSvgWidthPx =\r\n          svgSizeAsDigit >= winWidth ? winWidth - 40 + 'px' : svgSizeAsDigit + 'px';\r\n        var svgIconHTML =\r\n          '<div style=\"width:' +\r\n          maxSvgWidthPx +\r\n          '; height:' +\r\n          maxSvgWidthPx +\r\n          ';\" class=\"' +\r\n          newLoadingSettings.className +\r\n          '-icon' +\r\n          (message.length > 0 ? ' nx-with-message' : '') +\r\n          '\">' +\r\n          svgIcon +\r\n          '</div>';\r\n        // svgIcon: end\r\n\r\n        // loading wrap: begin\r\n        var ntflxLoadingWrap = window.document.createElement('div');\r\n        ntflxLoadingWrap.id = loadingSettings.ID;\r\n        ntflxLoadingWrap.className =\r\n          newLoadingSettings.className +\r\n          (newLoadingSettings.cssAnimation ? ' nx-with-animation' : '') +\r\n          (newLoadingSettings.clickToClose ? ' nx-click-to-close' : '');\r\n        ntflxLoadingWrap.style.zIndex = newLoadingSettings.zindex;\r\n        ntflxLoadingWrap.style.background = newLoadingSettings.backgroundColor;\r\n        ntflxLoadingWrap.style.animationDuration = newLoadingSettings.cssAnimationDuration + 'ms';\r\n        ntflxLoadingWrap.style.fontFamily =\r\n          '\"' + newLoadingSettings.fontFamily + '\", ' + defaultFontFamily;\r\n        ntflxLoadingWrap.style.display = 'flex';\r\n        ntflxLoadingWrap.style.flexWrap = 'wrap';\r\n        ntflxLoadingWrap.style.flexDirection = 'column';\r\n        ntflxLoadingWrap.style.alignItems = 'center';\r\n        ntflxLoadingWrap.style.justifyContent = 'center';\r\n\r\n        // rtl: begin\r\n        if (newLoadingSettings.rtl) {\r\n          ntflxLoadingWrap.setAttribute('dir', 'rtl');\r\n          ntflxLoadingWrap.classList.add('nx-rtl-on');\r\n        }\r\n        // rtl: end\r\n\r\n        // append: begin\r\n        ntflxLoadingWrap.innerHTML = svgIconHTML + messageHTML;\r\n\r\n        // if there is no loading element\r\n        if (!window.document.getElementById(ntflxLoadingWrap.id)) {\r\n          // append\r\n          window.document.body.appendChild(ntflxLoadingWrap);\r\n\r\n          // if click to close\r\n          if (newLoadingSettings.clickToClose) {\r\n            var loadingWrapElm = window.document.getElementById(ntflxLoadingWrap.id);\r\n            loadingWrapElm.addEventListener('click', function () {\r\n              ntflxLoadingWrap.classList.add('nx-remove');\r\n              var timeout = setTimeout(function () {\r\n                if (ntflxLoadingWrap.parentNode !== null) {\r\n                  ntflxLoadingWrap.parentNode.removeChild(ntflxLoadingWrap);\r\n                  clearTimeout(timeout);\r\n                }\r\n              }, newLoadingSettings.cssAnimationDuration);\r\n            });\r\n          }\r\n        }\r\n        // append: end\r\n      }\r\n      // remove loading\r\n      else {\r\n        // if there is a loading element\r\n        if (window.document.getElementById(loadingSettings.ID)) {\r\n          var loadingElm = window.document.getElementById(loadingSettings.ID);\r\n          var timeout = setTimeout(function () {\r\n            loadingElm.classList.add('nx-remove');\r\n            var timeout2 = setTimeout(function () {\r\n              if (loadingElm.parentNode !== null) {\r\n                loadingElm.parentNode.removeChild(loadingElm);\r\n                clearTimeout(timeout2);\r\n              }\r\n            }, newLoadingSettings.cssAnimationDuration);\r\n            clearTimeout(timeout);\r\n          }, delay);\r\n        }\r\n      }\r\n\r\n      // extend new settings with the backup settings\r\n      newLoadingSettings = commonExtendOptions(true, newLoadingSettings, newLoadingSettingsBackup);\r\n    };\r\n    // LOADING: Create: end\r\n\r\n    // LOADING: Change Message: begin\r\n    var loadingChangeMessage = function (newMessage) {\r\n      // check the new message\r\n      if (typeof newMessage !== 'string') {\r\n        newMessage = '';\r\n      }\r\n      // if has any loading\r\n      var messageWrap = window.document.getElementById(loadingSettings.ID);\r\n      if (messageWrap) {\r\n        // if there is a new message\r\n        if (newMessage.length > 0) {\r\n          // max length: begin\r\n          if (newMessage.length > newLoadingSettings.messageMaxLength) {\r\n            newMessage =\r\n              commonGetPlaintext(newMessage).substring(0, newLoadingSettings.messageMaxLength) +\r\n              '...';\r\n          } else {\r\n            newMessage = commonGetPlaintext(newMessage);\r\n          }\r\n          // max length: end\r\n\r\n          // there is a message element\r\n          var oldMessageElm = messageWrap.getElementsByTagName('p')[0];\r\n          if (oldMessageElm) {\r\n            oldMessageElm.innerHTML = newMessage; // change the message\r\n          }\r\n          // there is no message element\r\n          else {\r\n            // create a new message element: begin\r\n            var newMessageHTML = window.document.createElement('p');\r\n            newMessageHTML.id = newLoadingSettings.messageID;\r\n            newMessageHTML.className = 'nx-loading-message nx-loading-message-new';\r\n            newMessageHTML.style.color = newLoadingSettings.messageColor;\r\n            newMessageHTML.style.fontSize = newLoadingSettings.messageFontSize;\r\n            newMessageHTML.innerHTML = newMessage;\r\n            messageWrap.appendChild(newMessageHTML);\r\n            // create a new message element: end\r\n          }\r\n        }\r\n        // if no message\r\n        else {\r\n          commonConsoleError('Where is the new message?');\r\n        }\r\n      }\r\n    };\r\n    // LOADING: Change Message: end\r\n\r\n    // BLOCK: Get Internal CSS Codes: begin\r\n    var blockGetInternalCSSCodes = function () {\r\n      var blockCSS = '';\r\n      return blockCSS || null;\r\n    };\r\n    // BLOCK: Get Internal CSS Codes: end\r\n\r\n    // BLOCK: Create or Remove: begin\r\n    var blockCreateOrRemoveCounter = 0;\r\n    var blockCreateOrRemove = function (\r\n      isCreate,\r\n      blockType,\r\n      selectorOrHTMLElements,\r\n      messageOrOptions,\r\n      options,\r\n      delay,\r\n    ) {\r\n      var allHTMLElements;\r\n\r\n      // if, check and set Array of HTMLElements\r\n      if (Array.isArray(selectorOrHTMLElements)) {\r\n        if (selectorOrHTMLElements.length < 1) {\r\n          commonConsoleError('Array of HTMLElements should contains at least one HTMLElement.');\r\n          return false;\r\n        }\r\n        allHTMLElements = selectorOrHTMLElements;\r\n      }\r\n      // else if, check and set NodeListOf<HTMLElement>\r\n      else if (Object.prototype.isPrototypeOf.call(NodeList.prototype, selectorOrHTMLElements)) {\r\n        if (selectorOrHTMLElements.length < 1) {\r\n          commonConsoleError('NodeListOf<HTMLElement> should contains at least one HTMLElement.');\r\n          return false;\r\n        }\r\n        allHTMLElements = Array.prototype.slice.call(selectorOrHTMLElements);\r\n      }\r\n      // else, check and set the selector\r\n      else {\r\n        // check selector is valid: begin\r\n        var selectorIsNotValid =\r\n          typeof selectorOrHTMLElements !== 'string' ||\r\n          (selectorOrHTMLElements || '').length < 1 ||\r\n          ((selectorOrHTMLElements || '').length === 1 &&\r\n            ((selectorOrHTMLElements || '')[0] === '#' ||\r\n              (selectorOrHTMLElements || '')[0] === '.'));\r\n        if (selectorIsNotValid) {\r\n          commonConsoleError(\r\n            'The selector parameter must be a string and matches a specified CSS selector(s).',\r\n          );\r\n          return false;\r\n        }\r\n        // check selector is valid: end\r\n\r\n        // check the selector: begin\r\n        var nodeListOfHTMLElements = window.document.querySelectorAll(selectorOrHTMLElements);\r\n        if (nodeListOfHTMLElements.length < 1) {\r\n          commonConsoleError(\r\n            'You called the \"Notiflix.Block...\" function with \"' +\r\n              selectorOrHTMLElements +\r\n              '\" selector, but there is no such element(s) in the document.',\r\n          );\r\n          return false;\r\n        }\r\n        // check the selector: end\r\n\r\n        allHTMLElements = nodeListOfHTMLElements;\r\n      }\r\n\r\n      // if not initialized pretend like init: begin\r\n      if (!newBlockSettings) {\r\n        Notiflix.Block.init({});\r\n      }\r\n      // if not initialized pretend like init: end\r\n\r\n      // create a backup for new settings\r\n      var newBlockSettingsBackup = commonExtendOptions(true, newBlockSettings, {});\r\n\r\n      // check \"messageOrOptions\" and \"options\": begin\r\n      if (\r\n        (typeof messageOrOptions === 'object' && !Array.isArray(messageOrOptions)) ||\r\n        (typeof options === 'object' && !Array.isArray(options))\r\n      ) {\r\n        // new options\r\n        var newOptions = {};\r\n        if (typeof messageOrOptions === 'object') {\r\n          newOptions = messageOrOptions;\r\n        } else if (typeof options === 'object') {\r\n          newOptions = options;\r\n        }\r\n\r\n        // extend new settings with the new options\r\n        newBlockSettings = commonExtendOptions(true, newBlockSettings, newOptions);\r\n      }\r\n      // check \"messageOrOptions\" and \"options\": end\r\n\r\n      // check the message: begin\r\n      var message = '';\r\n      if (typeof messageOrOptions === 'string' && messageOrOptions.length > 0) {\r\n        message = messageOrOptions;\r\n      }\r\n      // check the message: end\r\n\r\n      // if cssAnimaion is false => duration: begin\r\n      if (!newBlockSettings.cssAnimation) {\r\n        newBlockSettings.cssAnimationDuration = 0;\r\n      }\r\n      // if cssAnimaion is false => duration: end\r\n\r\n      // check the class name: begin\r\n      var blockClassName = blockSettings.className;\r\n      if (typeof newBlockSettings.className === 'string') {\r\n        blockClassName = newBlockSettings.className.trim();\r\n      }\r\n      // check the class name: end\r\n\r\n      // check query limit: begin\r\n      var getQueryLimit =\r\n        typeof newBlockSettings.querySelectorLimit === 'number'\r\n          ? newBlockSettings.querySelectorLimit\r\n          : 200;\r\n      var checkQueryLimit =\r\n        (allHTMLElements || []).length >= getQueryLimit ? getQueryLimit : allHTMLElements.length;\r\n      // check query limit: end\r\n\r\n      // position class name for the non-static reference elements\r\n      var positionClassForNonStaticRef = 'nx-block-temporary-position';\r\n\r\n      // block\r\n      if (isCreate) {\r\n        // void and unavailable elements\r\n        var voidAndUnavailableElements = [\r\n          'area',\r\n          'base',\r\n          'br',\r\n          'col',\r\n          'command',\r\n          'embed',\r\n          'hr',\r\n          'img',\r\n          'input',\r\n          'keygen',\r\n          'link',\r\n          'meta',\r\n          'param',\r\n          'source',\r\n          'track',\r\n          'wbr',\r\n          'html',\r\n          'head',\r\n          'title',\r\n          'script',\r\n          'style',\r\n          'iframe',\r\n        ];\r\n\r\n        // add element(s) and style: begin\r\n        for (var queryIndex = 0; queryIndex < checkQueryLimit; queryIndex++) {\r\n          var eachElement = allHTMLElements[queryIndex];\r\n          if (eachElement) {\r\n            if (\r\n              voidAndUnavailableElements.indexOf(eachElement.tagName.toLocaleLowerCase('en')) > -1\r\n            ) {\r\n              break;\r\n            }\r\n\r\n            // check block element exist: begin\r\n            var eachBlockElement = eachElement.querySelectorAll('[id^=' + blockSettings.ID + ']');\r\n            if (eachBlockElement.length < 1) {\r\n              // check the icon: begin\r\n              var icon = '';\r\n              if (blockType) {\r\n                if (blockType === typesBlock.Hourglass) {\r\n                  icon = loadingAndBlockSvgIconHourglass(\r\n                    newBlockSettings.svgSize,\r\n                    newBlockSettings.svgColor,\r\n                  );\r\n                } else if (blockType === typesBlock.Circle) {\r\n                  icon = loadingAndBlockSvgIconCircle(\r\n                    newBlockSettings.svgSize,\r\n                    newBlockSettings.svgColor,\r\n                  );\r\n                } else if (blockType === typesBlock.Arrows) {\r\n                  icon = loadingAndBlockSvgIconArrows(\r\n                    newBlockSettings.svgSize,\r\n                    newBlockSettings.svgColor,\r\n                  );\r\n                } else if (blockType === typesBlock.Dots) {\r\n                  icon = loadingAndBlockSvgIconDots(\r\n                    newBlockSettings.svgSize,\r\n                    newBlockSettings.svgColor,\r\n                  );\r\n                } else if (blockType === typesBlock.Pulse) {\r\n                  icon = loadingAndBlockSvgIconPulse(\r\n                    newBlockSettings.svgSize,\r\n                    newBlockSettings.svgColor,\r\n                  );\r\n                } else {\r\n                  // typesBlock.Standard, also fallback\r\n                  icon = loadingAndBlockSvgIconStandard(\r\n                    newBlockSettings.svgSize,\r\n                    newBlockSettings.svgColor,\r\n                  );\r\n                }\r\n              }\r\n              var iconElement =\r\n                '<span class=\"' +\r\n                blockClassName +\r\n                '-icon\" style=\"width:' +\r\n                newBlockSettings.svgSize +\r\n                ';height:' +\r\n                newBlockSettings.svgSize +\r\n                ';\">' +\r\n                icon +\r\n                '</span>';\r\n              // check the icon: end\r\n\r\n              // check the message: begin\r\n              var messageElement = '';\r\n              if (message.length > 0) {\r\n                if (message.length > newBlockSettings.messageMaxLength) {\r\n                  message =\r\n                    commonGetPlaintext(message).substring(0, newBlockSettings.messageMaxLength) +\r\n                    '...';\r\n                } else {\r\n                  message = commonGetPlaintext(message);\r\n                }\r\n                messageElement =\r\n                  '<span style=\"font-size:' +\r\n                  newBlockSettings.messageFontSize +\r\n                  ';color:' +\r\n                  newBlockSettings.messageColor +\r\n                  ';\" class=\"' +\r\n                  blockClassName +\r\n                  '-message\">' +\r\n                  message +\r\n                  '</span>';\r\n              }\r\n              // check the message: end\r\n\r\n              // block element: begin\r\n              blockCreateOrRemoveCounter++;\r\n              var notiflixBlockWrap = window.document.createElement('div');\r\n              notiflixBlockWrap.id = blockSettings.ID + '-' + blockCreateOrRemoveCounter;\r\n              notiflixBlockWrap.className =\r\n                blockClassName + (newBlockSettings.cssAnimation ? ' nx-with-animation' : '');\r\n              notiflixBlockWrap.style.position = newBlockSettings.position;\r\n              notiflixBlockWrap.style.zIndex = newBlockSettings.zindex;\r\n              notiflixBlockWrap.style.background = newBlockSettings.backgroundColor;\r\n              notiflixBlockWrap.style.animationDuration =\r\n                newBlockSettings.cssAnimationDuration + 'ms';\r\n              notiflixBlockWrap.style.fontFamily =\r\n                '\"' + newBlockSettings.fontFamily + '\", ' + defaultFontFamily;\r\n              notiflixBlockWrap.style.display = 'flex';\r\n              notiflixBlockWrap.style.flexWrap = 'wrap';\r\n              notiflixBlockWrap.style.flexDirection = 'column';\r\n              notiflixBlockWrap.style.alignItems = 'center';\r\n              notiflixBlockWrap.style.justifyContent = 'center';\r\n              // block element: end\r\n\r\n              // block element rtl: begin\r\n              if (newBlockSettings.rtl) {\r\n                notiflixBlockWrap.setAttribute('dir', 'rtl');\r\n                notiflixBlockWrap.classList.add('nx-rtl-on');\r\n              }\r\n              // block element rtl: end\r\n\r\n              // block element data: begin\r\n              notiflixBlockWrap.innerHTML = iconElement + messageElement;\r\n              // block element data: end\r\n\r\n              // append block element: begin\r\n              var getEachElementPosition = window\r\n                .getComputedStyle(eachElement)\r\n                .getPropertyValue('position');\r\n              var eachElementPosition =\r\n                typeof getEachElementPosition === 'string'\r\n                  ? getEachElementPosition.toLocaleLowerCase('en')\r\n                  : 'relative';\r\n\r\n              var averageMinHeight = Math.round(parseInt(newBlockSettings.svgSize) * 1.25) + 40;\r\n              var eachElementHeight = eachElement.offsetHeight || 0;\r\n              var minHeightStyle = '';\r\n              if (averageMinHeight > eachElementHeight) {\r\n                minHeightStyle = 'min-height:' + averageMinHeight + 'px;';\r\n              }\r\n\r\n              // internal style: begin\r\n              var eachElementIdOrClass = '';\r\n              if (eachElement.getAttribute('id')) {\r\n                eachElementIdOrClass = '#' + eachElement.getAttribute('id');\r\n              } else if (eachElement.classList[0]) {\r\n                eachElementIdOrClass = '.' + eachElement.classList[0];\r\n              } else {\r\n                eachElementIdOrClass = (eachElement.tagName || '').toLocaleLowerCase('en');\r\n              }\r\n\r\n              var positionStyle = '';\r\n              var positions = ['absolute', 'relative', 'fixed', 'sticky'];\r\n              var addPosition = positions.indexOf(eachElementPosition) <= -1;\r\n              if (addPosition || minHeightStyle.length > 0) {\r\n                // check doc head\r\n                if (!commonCheckHeadOrBody('head')) {\r\n                  return false;\r\n                }\r\n\r\n                // check position style\r\n                if (addPosition) {\r\n                  positionStyle = 'position:relative!important;';\r\n                }\r\n\r\n                // create and add internal style to the head\r\n                var style =\r\n                  '<style id=\"Style-' +\r\n                  blockSettings.ID +\r\n                  '-' +\r\n                  blockCreateOrRemoveCounter +\r\n                  '\">' +\r\n                  eachElementIdOrClass +\r\n                  '.' +\r\n                  positionClassForNonStaticRef +\r\n                  '{' +\r\n                  positionStyle +\r\n                  minHeightStyle +\r\n                  '}' +\r\n                  '</style>';\r\n                var styleRange = window.document.createRange();\r\n                styleRange.selectNode(window.document.head);\r\n                var styleFragment = styleRange.createContextualFragment(style);\r\n                window.document.head.appendChild(styleFragment);\r\n\r\n                // add the \"positionClassForNonStaticRef\" to each element\r\n                eachElement.classList.add(positionClassForNonStaticRef);\r\n              }\r\n              // internal style: end\r\n\r\n              // append\r\n              eachElement.appendChild(notiflixBlockWrap);\r\n              // append block element: end\r\n            }\r\n            // check block element exist: end\r\n          }\r\n        }\r\n        // add element(s) and style: end\r\n      }\r\n      // unblock/remove\r\n      else {\r\n        // Step 3 => Remove each block element: begin\r\n        var removeBlockElements = function (eachOne) {\r\n          var timeout = setTimeout(function () {\r\n            // remove element\r\n            if (eachOne.parentNode !== null) {\r\n              eachOne.parentNode.removeChild(eachOne);\r\n            }\r\n\r\n            // remove element's internal style\r\n            var eachOneId = eachOne.getAttribute('id');\r\n            var eachOneStyle = window.document.getElementById('Style-' + eachOneId);\r\n            if (eachOneStyle && eachOneStyle.parentNode !== null) {\r\n              eachOneStyle.parentNode.removeChild(eachOneStyle);\r\n            }\r\n\r\n            // clear timeout\r\n            clearTimeout(timeout);\r\n          }, newBlockSettings.cssAnimationDuration);\r\n        };\r\n        // Step 3 => Remove each block element: end\r\n\r\n        // Step 2A => Remove each block element: begin\r\n        var removeClassBlockElements = function (eachBlockElement) {\r\n          // if elements exist\r\n          if (eachBlockElement && eachBlockElement.length > 0) {\r\n            for (var i = 0; i < eachBlockElement.length; i++) {\r\n              var eachOne = eachBlockElement[i];\r\n              if (eachOne) {\r\n                // add remove class\r\n                eachOne.classList.add('nx-remove');\r\n                // remove block elements\r\n                removeBlockElements(eachOne);\r\n              }\r\n            }\r\n          }\r\n          // not exist\r\n          else {\r\n            if (typeof selectorOrHTMLElements === 'string') {\r\n              commonConsoleLog(\r\n                '\"Notiflix.Block.remove();\" function called with \"' +\r\n                  selectorOrHTMLElements +\r\n                  '\" selector, but this selector does not have a \"Block\" element to remove.',\r\n              );\r\n            } else {\r\n              commonConsoleLog(\r\n                '\"Notiflix.Block.remove();\" function called with \"' +\r\n                  selectorOrHTMLElements +\r\n                  '\", but this \"Array<HTMLElement>\" or \"NodeListOf<HTMLElement>\" does not have a \"Block\" element to remove.',\r\n              );\r\n            }\r\n          }\r\n        };\r\n        // Step 2A => Remove each block element: end\r\n\r\n        // Step 2B => Remove each element's class name: begin\r\n        var removeEachElementClassName = function (eachElement) {\r\n          var timeout = setTimeout(function () {\r\n            // remove class name\r\n            eachElement.classList.remove(positionClassForNonStaticRef);\r\n\r\n            // clear timeout\r\n            clearTimeout(timeout);\r\n          }, newBlockSettings.cssAnimationDuration + 300);\r\n        };\r\n        // Step 2B => Remove each element's class name: end\r\n\r\n        // Step 1 => Remove each element: begin\r\n        var removeElementTimeout = setTimeout(function () {\r\n          for (var i = 0; i < checkQueryLimit; i++) {\r\n            var eachElement = allHTMLElements[i];\r\n            if (eachElement) {\r\n              // remove each element's class name\r\n              removeEachElementClassName(eachElement);\r\n\r\n              // remove each block element\r\n              eachBlockElement = eachElement.querySelectorAll('[id^=' + blockSettings.ID + ']');\r\n              removeClassBlockElements(eachBlockElement);\r\n            }\r\n          }\r\n          // clear timeout\r\n          clearTimeout(removeElementTimeout);\r\n        }, delay);\r\n        // Step 1 => Remove each element: end\r\n      }\r\n\r\n      // extend new settings with the backup settings\r\n      newBlockSettings = commonExtendOptions(true, newBlockSettings, newBlockSettingsBackup);\r\n    };\r\n    // BLOCK: Create or Remove: end\r\n\r\n    // NOTIFLIX: Main: begin\r\n    var Notiflix = {\r\n      // NOTIFLIX.NOTIFY: begin\r\n      Notify: {\r\n        // Init\r\n        init: function (userNotifyOptions) {\r\n          // extend options\r\n          newNotifySettings = commonExtendOptions(true, notifySettings, userNotifyOptions);\r\n          // internal css if exist\r\n          commonSetInternalCSSCodes(notifyGetInternalCSSCodes, 'NotiflixNotifyInternalCSS');\r\n        },\r\n        // Merge First Init\r\n        merge: function (userNotifyExtendOptions) {\r\n          // if initialized already\r\n          if (newNotifySettings) {\r\n            newNotifySettings = commonExtendOptions(\r\n              true,\r\n              newNotifySettings,\r\n              userNotifyExtendOptions,\r\n            );\r\n          }\r\n          // initialize first\r\n          else {\r\n            commonConsoleError(\r\n              'You have to initialize the Notify module before call Merge function.',\r\n            );\r\n            return false;\r\n          }\r\n        },\r\n        // Success\r\n        success: function (message, callbackOrOptions, options) {\r\n          notifyCreate(typesNotify.Success, message, callbackOrOptions, options);\r\n        },\r\n        // Failure\r\n        failure: function (message, callbackOrOptions, options) {\r\n          notifyCreate(typesNotify.Failure, message, callbackOrOptions, options);\r\n        },\r\n        // Warning\r\n        warning: function (message, callbackOrOptions, options) {\r\n          notifyCreate(typesNotify.Warning, message, callbackOrOptions, options);\r\n        },\r\n        // Info\r\n        info: function (message, callbackOrOptions, options) {\r\n          notifyCreate(typesNotify.Info, message, callbackOrOptions, options);\r\n        },\r\n      },\r\n      // NOTIFLIX.NOTIFY: end\r\n\r\n      // NOTIFLIX.REPORT: begin\r\n      Report: {\r\n        // Init\r\n        init: function (userReportOptions) {\r\n          // extend options\r\n          newReportSettings = commonExtendOptions(true, reportSettings, userReportOptions);\r\n          // internal css if exist\r\n          commonSetInternalCSSCodes(reportGetInternalCSSCodes, 'NotiflixReportInternalCSS');\r\n        },\r\n        // Merge First Init\r\n        merge: function (userReportExtendOptions) {\r\n          // if initialized already\r\n          if (newReportSettings) {\r\n            newReportSettings = commonExtendOptions(\r\n              true,\r\n              newReportSettings,\r\n              userReportExtendOptions,\r\n            );\r\n          }\r\n          // initialize first\r\n          else {\r\n            commonConsoleError(\r\n              'You have to initialize the Report module before call Merge function.',\r\n            );\r\n            return false;\r\n          }\r\n        },\r\n        // Success\r\n        success: function (title, message, buttonText, callbackOrOptions, options) {\r\n          reportCreate(typesReport.Success, title, message, buttonText, callbackOrOptions, options);\r\n        },\r\n        // Failure\r\n        failure: function (title, message, buttonText, callbackOrOptions, options) {\r\n          reportCreate(typesReport.Failure, title, message, buttonText, callbackOrOptions, options);\r\n        },\r\n        // Warning\r\n        warning: function (title, message, buttonText, callbackOrOptions, options) {\r\n          reportCreate(typesReport.Warning, title, message, buttonText, callbackOrOptions, options);\r\n        },\r\n        // Info\r\n        info: function (title, message, buttonText, callbackOrOptions, options) {\r\n          reportCreate(typesReport.Info, title, message, buttonText, callbackOrOptions, options);\r\n        },\r\n      },\r\n      // NOTIFLIX.REPORT: end\r\n\r\n      // NOTIFLIX.CONFIRM: begin\r\n      Confirm: {\r\n        // Init\r\n        init: function (userConfirmOptions) {\r\n          // extend options\r\n          newConfirmSettings = commonExtendOptions(true, confirmSettings, userConfirmOptions);\r\n          // internal css if exist\r\n          commonSetInternalCSSCodes(confirmGetInternalCSSCodes, 'NotiflixConfirmInternalCSS');\r\n        },\r\n        // Merge First Init\r\n        merge: function (userConfirmExtendOptions) {\r\n          // if initialized already\r\n          if (newConfirmSettings) {\r\n            newConfirmSettings = commonExtendOptions(\r\n              true,\r\n              newConfirmSettings,\r\n              userConfirmExtendOptions,\r\n            );\r\n          }\r\n          // initialize first\r\n          else {\r\n            commonConsoleError(\r\n              'You have to initialize the Confirm module before call Merge function.',\r\n            );\r\n            return false;\r\n          }\r\n        },\r\n        // Show\r\n        show: function (\r\n          title,\r\n          message,\r\n          okButtonText,\r\n          cancelButtonText,\r\n          okButtonCallback,\r\n          cancelButtonCallback,\r\n          options,\r\n        ) {\r\n          confirmCreate(\r\n            typesConfirm.Show,\r\n            title,\r\n            message,\r\n            null,\r\n            okButtonText,\r\n            cancelButtonText,\r\n            okButtonCallback,\r\n            cancelButtonCallback,\r\n            options,\r\n          );\r\n        },\r\n        // Ask\r\n        ask: function (\r\n          title,\r\n          question,\r\n          answer,\r\n          okButtonText,\r\n          cancelButtonText,\r\n          okButtonCallback,\r\n          cancelButtonCallback,\r\n          options,\r\n        ) {\r\n          confirmCreate(\r\n            typesConfirm.Ask,\r\n            title,\r\n            question,\r\n            answer,\r\n            okButtonText,\r\n            cancelButtonText,\r\n            okButtonCallback,\r\n            cancelButtonCallback,\r\n            options,\r\n          );\r\n        },\r\n        // Prompt\r\n        prompt: function (\r\n          title,\r\n          question,\r\n          defaultAnswer,\r\n          okButtonText,\r\n          cancelButtonText,\r\n          okButtonCallback,\r\n          cancelButtonCallback,\r\n          options,\r\n        ) {\r\n          confirmCreate(\r\n            typesConfirm.Prompt,\r\n            title,\r\n            question,\r\n            defaultAnswer,\r\n            okButtonText,\r\n            cancelButtonText,\r\n            okButtonCallback,\r\n            cancelButtonCallback,\r\n            options,\r\n          );\r\n        },\r\n      },\r\n      // NOTIFLIX.CONFIRM: end\r\n\r\n      // NOTIFLIX.LOADING: begin\r\n      Loading: {\r\n        // Init\r\n        init: function (userLoadingOptions) {\r\n          // extend options\r\n          newLoadingSettings = commonExtendOptions(true, loadingSettings, userLoadingOptions);\r\n          // internal css if exist\r\n          commonSetInternalCSSCodes(loadingGetInternalCSSCodes, 'NotiflixLoadingInternalCSS');\r\n        },\r\n        // Merge First Init\r\n        merge: function (userLoadingExtendOptions) {\r\n          // if initialized already\r\n          if (newLoadingSettings) {\r\n            newLoadingSettings = commonExtendOptions(\r\n              true,\r\n              newLoadingSettings,\r\n              userLoadingExtendOptions,\r\n            );\r\n          }\r\n          // initialize first\r\n          else {\r\n            commonConsoleError(\r\n              'You have to initialize the Loading module before call Merge function.',\r\n            );\r\n            return false;\r\n          }\r\n        },\r\n        // Standard\r\n        standard: function (messageOrOptions, options) {\r\n          loadingCreate(typesLoading.Standard, messageOrOptions, options, true, 0); // true => show && 0 => delay\r\n        },\r\n        // Hourglass\r\n        hourglass: function (messageOrOptions, options) {\r\n          loadingCreate(typesLoading.Hourglass, messageOrOptions, options, true, 0); // true => show && 0 => delay\r\n        },\r\n        // Circle\r\n        circle: function (messageOrOptions, options) {\r\n          loadingCreate(typesLoading.Circle, messageOrOptions, options, true, 0); // true => show && 0 => delay\r\n        },\r\n        // Arrows\r\n        arrows: function (messageOrOptions, options) {\r\n          loadingCreate(typesLoading.Arrows, messageOrOptions, options, true, 0); // true => show && 0 => delay\r\n        },\r\n        // Dots\r\n        dots: function (messageOrOptions, options) {\r\n          loadingCreate(typesLoading.Dots, messageOrOptions, options, true, 0); // true => show && 0 => delay\r\n        },\r\n        // Pulse\r\n        pulse: function (messageOrOptions, options) {\r\n          loadingCreate(typesLoading.Pulse, messageOrOptions, options, true, 0); // true => show && 0 => delay\r\n        },\r\n        // Custom\r\n        custom: function (messageOrOptions, options) {\r\n          loadingCreate(typesLoading.Custom, messageOrOptions, options, true, 0); // true => show && 0 => delay\r\n        },\r\n        // Notiflix\r\n        notiflix: function (messageOrOptions, options) {\r\n          loadingCreate(typesLoading.Notiflix, messageOrOptions, options, true, 0); // true => show && 0 => delay\r\n        },\r\n        // Remove\r\n        remove: function (delay) {\r\n          if (typeof delay !== 'number') {\r\n            delay = 0;\r\n          }\r\n          loadingCreate(null, null, null, false, delay); // false => hide/remove\r\n        },\r\n        // Change The Message\r\n        change: function (newMessage) {\r\n          loadingChangeMessage(newMessage);\r\n        },\r\n      },\r\n      // NOTIFLIX.LOADING: end\r\n\r\n      // NOTIFLIX.BLOCK: begin\r\n      Block: {\r\n        // Initialize\r\n        init: function (userBlockOptions) {\r\n          // extend options\r\n          newBlockSettings = commonExtendOptions(true, blockSettings, userBlockOptions);\r\n          // internal css if exist\r\n          commonSetInternalCSSCodes(blockGetInternalCSSCodes, 'NotiflixBlockInternalCSS');\r\n        },\r\n        // Merge First Initialize\r\n        merge: function (userBlockExtendOptions) {\r\n          // if initialized already\r\n          if (newBlockSettings) {\r\n            newBlockSettings = commonExtendOptions(true, newBlockSettings, userBlockExtendOptions);\r\n          }\r\n          // initialize first\r\n          else {\r\n            commonConsoleError(\r\n              'You have to initialize the \"Notiflix.Block\" module before call Merge function.',\r\n            );\r\n            return false;\r\n          }\r\n        },\r\n        // Standard\r\n        standard: function (selectorOrHTMLElements, messageOrOptions, options) {\r\n          blockCreateOrRemove(\r\n            true,\r\n            typesBlock.Standard,\r\n            selectorOrHTMLElements,\r\n            messageOrOptions,\r\n            options,\r\n          ); // true => show\r\n        },\r\n        // Hourglass\r\n        hourglass: function (selectorOrHTMLElements, messageOrOptions, options) {\r\n          blockCreateOrRemove(\r\n            true,\r\n            typesBlock.Hourglass,\r\n            selectorOrHTMLElements,\r\n            messageOrOptions,\r\n            options,\r\n          ); // true => show\r\n        },\r\n        // Circle\r\n        circle: function (selectorOrHTMLElements, messageOrOptions, options) {\r\n          blockCreateOrRemove(\r\n            true,\r\n            typesBlock.Circle,\r\n            selectorOrHTMLElements,\r\n            messageOrOptions,\r\n            options,\r\n          ); // true => show\r\n        },\r\n        // Arrows\r\n        arrows: function (selectorOrHTMLElements, messageOrOptions, options) {\r\n          blockCreateOrRemove(\r\n            true,\r\n            typesBlock.Arrows,\r\n            selectorOrHTMLElements,\r\n            messageOrOptions,\r\n            options,\r\n          ); // true => show\r\n        },\r\n        // Dots\r\n        dots: function (selectorOrHTMLElements, messageOrOptions, options) {\r\n          blockCreateOrRemove(\r\n            true,\r\n            typesBlock.Dots,\r\n            selectorOrHTMLElements,\r\n            messageOrOptions,\r\n            options,\r\n          ); // true => show\r\n        },\r\n        // Pulse\r\n        pulse: function (selectorOrHTMLElements, messageOrOptions, options) {\r\n          blockCreateOrRemove(\r\n            true,\r\n            typesBlock.Pulse,\r\n            selectorOrHTMLElements,\r\n            messageOrOptions,\r\n            options,\r\n          ); // true => show\r\n        },\r\n        // Remove\r\n        remove: function (selectorOrHTMLElements, delay) {\r\n          if (typeof delay !== 'number') {\r\n            delay = 0;\r\n          }\r\n          blockCreateOrRemove(false, null, selectorOrHTMLElements, null, null, delay); // false => hide/remove\r\n        },\r\n      },\r\n      // NOTIFLIX.BLOCK: end\r\n    };\r\n    // NOTIFLIX: Main: end\r\n\r\n    // NOTIFLIX: Return: begin\r\n    return {\r\n      Notify: Notiflix.Notify,\r\n      Report: Notiflix.Report,\r\n      Confirm: Notiflix.Confirm,\r\n      Loading: Notiflix.Loading,\r\n      Block: Notiflix.Block,\r\n    };\r\n    // NOTIFLIX: Return: end\r\n  },\r\n);\r\n"]}